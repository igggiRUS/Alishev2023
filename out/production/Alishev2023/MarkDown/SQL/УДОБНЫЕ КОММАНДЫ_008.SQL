/////////EXCEL

=ЕСЛИОШИБКА(ВПР(C2;$G$2:$G$39;1;0);"ЭТО ТО ЧТО НУЖНО")

ЦИФРА возле меня XRX9C934E450D81
http://192.168.0.65:8018/wsd

*МД004*|*МД005*|*МД013*|*МД026*|*МД042*|*МД043*|*МД069*|*МД072*|*МД073*|*МД080*|*МД096*|*МД098*|*МД104*|*РД003*|*РД004*|*РД006*|*РД009*|*МД001*|*МД017*|*МД030*|*МД036*|*МД039*|*МД064*|*МД077*|*МД088*|*МД099*|*МД100*|*РД010*|*МД021*|*МД050*|*МД087*|*МД095*|*РД008*|*МД003*|*МД052*|*МД074*|*МД097*|*МД031*|*МД033*|*МД106*|*РД005*|*МД009*|*МД110* ext:pdf; "\\Cifraserver4\2021" \принт

///////////////////////////////// Дитеко Растр

Бумага, Картон?
Толщина бумаги
Перфорация 2 к 1, 3 к 1, 3 к 2
Никсы 0,3 0,4?
Сделать превью бумаги

https://ru.freepik.com/premium-vector/business-card-with-rose-gold-hand-drawn-leaves_1810537.htm

\\CIFRASERVER\Archiv\!SIGNA
\\CIFRASERVER\Archiv\!SIGNA\SignaJobs
\\CIFRASERVER\Archiv\!SIGNA\Documents
\\CIFRASERVER\Archiv\!SIGNA\Output
\\CIFRASERVER\Archiv\!SIGNA\Packaging-CAD
C:\Program Files (x86)\Adobe\Acrobat DC\Acrobat\acrodist.exe
C:\Program Files (x86)\Adobe\Acrobat DC\Acrobat\Acrobat.exe
/////////////////////////////////

https://support.microsoft.com/ru-ru/office/%D0%BF%D0%BE%D1%81%D0%BB%D0%B5%D0%B4%D0%BE%D0%B2-%D1%84%D1%83%D0%BD%D0%BA%D1%86%D0%B8%D1%8F-%D0%BF%D0%BE%D1%81%D0%BB%D0%B5%D0%B4%D0%BE%D0%B2-57467a98-57e0-4817-9f14-2eb78519ca90

////////// barcode///////////////

https://zint.github.io/

////// руководство дизайна //////

http://adminbook.ru/index.php?men5=2/12

////// excel //////
Нажмите сочетание Alt+F11 или выберите в меню Сервис - Макрос - Редактор Visual Basic (Tools - Macro - Visual Basic Editor), вставьте новый модуль через меню Insert - Module и скопируйте туда текст этого макроса: 


    
Sub SplitSheets2()
    Dim s As Worksheet
    Dim wb as Workbook
    Set wb = ActiveWorkbook
    For Each s In wb.Worksheets                                 'проходим во всем листам активной книги
        s.Copy                                                  'сохраняем лист как новый файл
        'ActiveWorkbook.SaveAs wb.Path & "\" & s.Name & ".xlsx"  сохраняем файл ЭТУ СТРОЧКУЕСЛИ НАДО ФАЙЛЫ ЭКСЕЛЬ'
        ActiveWorkbook.SaveAs wb.Path & "\" & s.Name & ".csv", FileFormat:=23, CreateBackup:=False 'сохраняем файл в формате CSV
    Next
End Sub




/'//////  excel //////

СОХРАНЕНИЕ EXCEL ФАЙЛА В НУЖНОМ ФОРМАТЕ

список форматов
https://docs.microsoft.com/ru-ru/office/vba/api/Excel.XlFileFormat

 Docs Справочник по VBA для Office Excel Объектная модель Перечисления XlFileFormat



Excel сохраняет файл в формате установленном в параметрах по умолчанию не зависимо от указанного расширения, если не указать формат конкретно.
Или установите в параметрах Excel я формат сохраняемых файлов по умолчанию "Excel 97-2003 Workbook", или указывайте формат в коде при сохранении.

    ActiveWorkbook.SaveAs wb.Path & "\" & s.Name & ".xlsx", FileFormat:=56, CreateBackup:=False 

///////  excel //////


\\cifraserver4\2021\7-ИЮЛЬ\213219\работа

/////// что можно делать в тулбоксе

1. тримбокс+блидбокс
2. cutcountur
3. пантоном показывать фальцы и обрезной формата (proofcolor) и показывать размеры объекта
4. Разрезать книгу неправильно свертсаную, или неправильно спущеную.
5. Масштабировать станицы
6. уменьшать сумму красски
7. смотреть репорты (репорт пишется в тело файла)
8. удалять лишние споты: пантоны, штампы, лаки
9. делать треппинг
10. совмещать лицо с обором
11. добавлять вылеты
12. Убирать метки (crop)

///////////////// LDP 7224d телефон программирование
Trans/Pgm/нажать на кнопку // набрать номер для кнопки (например 100) // Hold/Save
///////////////////////////
////////////////////////////
//////////////////////


/////////////////// программа для отображения клавиатуры YAKD //////////////
YetAnotherKeyDisplayer

YAKD_1.2.1_installer

https://github.com/Jagailo/YetAnotherKeyDisplayer/releases

////////////// требования к проверке макетов

-- проверка  PDF файлов
-----------------
1.      Требуется наличие ТЗ
2.      Проверка размеровв соответствии с ТЗ
3.      Проверка тиража в соответствии с ТЗ
----------------
4.      Проверить цветность в соответствии с ТЗ
4.1     Проверить цветовую модель и пантоны
4.2     Проверить черный текст на составной черный (так же мелкие и крупные объекты.)
-----------------
5.      Проверить версию PDF и программу которая ее сгенерировала
6.      Проверить в ТЗ наличие: штампа, лака, биговки, ламинации, пантоны
6.1     Штамп лак пантоны должны быть обозначенны отдельной краской, или оговоренным названием объекта (штамп цветом:cut)
-----------------
7.      Проверить вылеты
7.1     Для буклетов проверить фальцы
-----------------
8.      Проверить сумму красок

///////// при скачивании драйвер мега пак удаляй папку софт и не буде устанавливаться мусор

/////////////////////////раскат краски

1 узнаем формат бумаги (допустим 640 x 450 )
2 узнаем тираж      5000000 шт
3 коэф для CMYK       1.2
4 коэф для Panthone   1.5

//////////////////////// Узнать время печати коники. НЕ ТРОГАТЬ РАСЧЕТЫ НЕ ЗАВЕРШЕНЫ
кол-во листво в файле / (60) минут

Тираж делим на колличество листов в Файле делим на колличество минут в часе

ошибка выжившего))))) лол колличество листов в файле делить на 60 минут

////////////////////////// расчет интерлиньяжа в верстке indesign

Сперва рассчитаем микромодуль, он послужит образующим элементом для всего остального.
В интерлиньяж по высоте должно помещаться целое количество микромодулей, чем их больше, тем более гибкая сетка. Но их не должно быть слишком много, т.к. потеряется смысл сетки.
Я возьму число 4.

13,929 / 4 = 3,4822 пт


Полученное значение вписываем в настройках сетки Vertical. Значение Subdivisions ставим на единицу.

высота текста      число взято      subdivision 
12                  4               3,00

значение вертикаль ставим           1   Vertical


///////////////////////// сползание

x = толщина бумаги в мкм = x
узнать на сайте берега или комуса

http://www.bumaga-komus.ru/catalog/9/249/
https://www.bereg.net/service/price_SPb
http://spb.bereg.net/papers/omela-gloss.html

y = толщина бумаги в мм = y
p = Колличеств полос = p
c = количество Полос количество полос в развороте с лица и оброта (всегда константа)   = const = 4 = c
z = Количество разворотов = z (чило должно быть кратно 4 иначе книга на скрепку не соберется)
d = Величина сползания = d
t = Величина мкм t= 1000 микрометров (константа) = 1 милиметр

(x/t)=y узнаем  толщину бумаги в мм
(p/c)=z узнаем колличество разворотов
(z/y)=d узнаем величина сползания

(p/c)/(x/t)=d

//////////////// конвертирование единиц измерения

            1000    мм      1           meter
значения    2,835   pt      1           mm
................................................

pt = mm
0.5 / 2.835 = 0.18


pt          0,5     >>>>    0,18        mm
................................................

mm = pt
5*2.835 = 0.18

mm          5       >>>>    14,2     pt
................................................

mm=meter
20530/1000 = 20.5

mm          20530   >>>>    20,5        meter
................................................


///////////////////////////////////////////////
///////////////////////////////////////////////
///////////////////////////////////////////////
///////////////////////////////////////////////
///////////////////////////////////////////////
///////////////////////////////////////////////
///////////////////////////////////////////////
///////////////////////////////////////////////
///////////////////////////////////////////////
///////////////////////////////////////////////
///////////////////////////////////////////////
///////////////////////////////////////////////
///////////////////////////////////////////////
///////////////////////////////////////////////
///////////////////////////////////////////////
///////////////////////////////////////////////
///////////////////////////////////////////////
///////////////////////////////////////////////
РАСЧЕТЫ РАСКАТА КРАСКИ РАСЧЕТЫ РАСКАТА КРАСКИ
0000000000000000000000000000000000000000000000

https://www.ghostscript.com/download/gsdnld.html
дополнение для apfill
http://avpsoft.ru/products/apfill/

00002H-TBRX14-MH99QG-C45U1J-0MP822-7DF0RY-93DQDX-DCB8PQ-755VXK-AP87DM-2UP253

http://avpsoft.ru/download/apfill.exe

................................

Данные
R = 1 000 000 шт (тираж)
F = 640 x 450 мм (формат бумаги)
J = 18 (колличество деталей на листе)
коэффициент раската красски
Cmyk = 1,2 (CMYK)
Panthone = 1,5 (Panthone)
Sp = SpA * ApB площадь бумаги 0.64 x 0.45 = 0.288
G = 1000 грамм
M = 1000 мм 
Proc = 100 %

Sp * Cmyk / G / Proc = раскат краски CMYK на 1 лист = Cmyk.1Page
Sp * Panthone / G / Proc = раскат краски Panthone на 1 лист = Panthone.1Page

=================================
Процент красски смотрим по программе.
Пример:
С.proc = 5 %
M.proc = 15 %
Y.proc = 35 %
K.proc = 65 %
Cmyk.1Page * C.proc
Cmyk.1Page * M.proc
Cmyk.1Page * Y.proc
Cmyk.1Page * K.proc

P1.proc = 65 %
P2.proc = 12 %
P3.proc = 8 %

Panthone.1Page * 1.proc = Panthone.1S
Panthone.1Page * 2.proc
Panthone.1Page * 3.proc

--- TO DO  сделать формулу тиража R \ J = V  
--- V * коэф Panthone.1Page * 1.proc

=================================
Площадь бумаги делим на 1000 грамм узнаем 
Sp / G / Proc = КОЭФИЦИЕНТ = Z
Полученый коэф  умножаем на процент краски.
С.proc * Z = C.gr
M.proc * Z = M.gr
Y.proc * Z = Y.gr
K.proc * Z = K.gr

 Z = краски на 1 лист А2
Z * на тираж в А2 

0000000000000000000000000000000000000000000000
РАСЧЕТЫ РАСКАТА КРАСКИ РАСЧЕТЫ РАСКАТА КРАСКИ
///////////////////////////////////////////////
///////////////////////////////////////////////
///////////////////////////////////////////////
///////////////////////////////////////////////
///////////////////////////////////////////////
///////////////////////////////////////////////
///////////////////////////////////////////////
///////////////////////////////////////////////
///////////////////////////////////////////////
///////////////////////////////////////////////
///////////////////////////////////////////////
///////////////////////////////////////////////
///////////////////////////////////////////////
///////////////////////////////////////////////
///////////////////////////////////////////////
///////////////////////////////////////////////
///////////////////////////////////////////////
///////////////////////////////////////////////


////////////////////// vdi
C:\Users\PC16\VirtualBox VMs\w10\w10.vdi




////////////////////////// ЗАПРОСЫ ПОИСКА everething
 поиск по расширению 
ext:rtf;txt;
//////////////////////////
по размеру
size:0kb..10kb
size:0mb..10mb
size:<=10mb  -- не более 10
size:>=10mb  -- не менее 10
////////////////////
по дате
-- в этом месяце
dm:thismonth
-- Период
dm:1/06/2021..1/12/2021 

-- с этой даты и до сегодняшнего дня
dm:>=5/12/2020
-- с любого периода по эту дату
dm:<=12/07/2020

//////////////// текст внутри файла
content:ФайлСодержитЭтотТекст 
///////////////
любое из этого в имени файлов (слово)
*.pdf|*.sdf|*.doc*
//////////////// поиск в указанном месте
\\cifraserver4\2020\12-ДЕКАБРЬ
//////////////// исключить из поиска
!исключить !исключить !исключить

ext:sql; size:5kb..20kb dm:1/05/2021..1/08/2021 content:adobe


//////////////////////////  письма запросы 



after:2016/01/01 before:2016/02/01 filename:pdf size:5e+6 


https://www.publish.ru/articles/201511_20013486




label:алексей -анонс -картон -каталог -счет -самоклеящиеся -ТЗ -Ольга -стр -westcall -label:газар -label:клиенты-интерзет  -label:настя -label:ольга -label:наталья -label:люба -label:поставщики/европапир  -label:поставщики/бронко -label:поставщики/heidelberg -label:поставщики/Папирус Столица after:2016/10/01 before:2017/06/01 has:attachment size:8e+6


///////////////// ЮРА пароли
============================================================

Данные для подключения по RDP 188.143.136.122:23392
CifraServerUser
Cifra2019

адрес 188.143.136.122:23392
login  CifraServerUser
Pass   Cifra2019

на виртуалке user
pass 159357

\\autocheck\SW data это к расшаренным папкам

Пароль 2668

192.168.0.91
========================================

///////////////// PDFTOOLBOX

C:\ProgramData\Heidelberg

C:\ProgramData\Heidelberg\PDFToolbox



///////////////// PDF ПЛАГИН для подсчета страниц

PDFtk - The PDF Toolkit
PDF СТАНИЦЫ pdftk_free-2.02-win-setup программа видит страницы
https://www.pdflabs.com/tools/pdftk-pro/

///////////////// ADOBE

16pdf.joboptions
C:\Users\PC16\AppData\Roaming\Adobe\Adobe PDF\Settings

программа для автокликера в акробате

https://forum.rudtp.ru/threads/kak-paketno-obrabotat-pdf-fajly-pitstopom.67261/


app.execMenuItem("FICL:PitStop_PitStop_Menu_QuickSets_PITSTOP_3_146");



ACROBATE

C:\Users\PC16W10\AppData\Roaming\Adobe\Acrobat\DC\Preferences\PDF Optimizer
C:\Users\PC16W10\AppData\Roaming\Adobe\Acrobat\DC\Preferences
16.optimize
C:\Users\PC16W10\AppData\Roaming\Adobe\Acrobat\DC\Sequences
16.sequ

AI

C:\Program Files\Adobe\Adobe Illustrator CC 2017\Presets\en_US\Scripts

C:\Program Files\Adobe\Adobe Illustrator 2020\Presets\en_US\Scripts


///////////////// ПАСС pass Konica коника minolta
Zaq1-2ws
192.168.0.66
188.143.136.122





///////////////// Дитеко Растр перфорация

Бумага, Картон?
Толщина бумаги
Перфорация 2 к 1, 3 к 1, 3 к 2
Никсы 0,3 0,4?
Сделать превью бумаги



https://ru.freepik.com/premium-vector/business-card-with-rose-gold-hand-drawn-leaves_1810537.htm


///////////////////////// СИГНА

\\CIFRASERVER\Archiv\!SIGNA
\\CIFRASERVER\Archiv\!SIGNA\SignaJobs
\\CIFRASERVER\Archiv\!SIGNA\Documents
\\CIFRASERVER\Archiv\!SIGNA\Output
\\CIFRASERVER\Archiv\!SIGNA\Packaging-CAD
C:\Program Files (x86)\Adobe\Acrobat DC\Acrobat\acrodist.exe
C:\Program Files (x86)\Adobe\Acrobat DC\Acrobat\Acrobat.exe



PDF Toolbox 16.x 
TX16-FL-00001-0000-0000-00FB-EFBE-FBEF-BEFB-EFBE-FBEF-BEFB-EFBE-FBEF-000A 

Cockpit 16.x 
PC16-FL-00002-0000-0000-00FB-EFBE-FBEF-BEFB-EFBE-FBEF-BEFB-EFBE-FBEF-BEFB-EFBE-FBEF-BEFB-EFBE-FBEF-BEFB-E000-0A 

Color Toolbox 16.x 
CT16-FL-00002-FFFF-FFFF-FFFB-EFBE-FBEF-BEFB-EFBE-F800-000A 

Content System 16.x 
CS16-ND-00002-FFFF-FFFF-FFFF-00FF-FFFF-7FFF-0F 

Meta 16.x 
MD16-ND-00001-FFFF-FFFF-FFFF-FFF0-FF7F-FFFF-FFFF-FFFF-0016-0F 

DigitalRenderer 16.x 
DR16-ND-00002-FFFF-FFFF-FFFF-00FF-FFFF-FFFF-FFFF-0F 

HighResRenderer 16.x 
HR16-ND-00002-FFFF-FFFF-FFFF-00FF-FFFF-FFFF-FFFF-0F 

MetaShooter 16.x 
MS16-ND-00002-0000-0000-0001-FFFF-FFF8-1800-0F 

Package Designer 16.x 
DE16-FL-00002-0000-0000-00FB-EFBE-FBEF-BEFB-EF80-000A 

PPI 16.x 
PI16-ND-00002-0000-0000-0001-FFFF-FFFF-000F 

Signa 16.x 
SI16-FL-00001-0000-0000-00FB-EFBE-FBEF-BEFB-EFBE-F800-000A 

Prinect Engines 16.x 
PE16-ND-00001-0000-0000-0001-00FF-FF87-FFFF-FFFF-FFFF-FEC9-7E7F-FFFF-FFFF-FFFF-F81F-FFFF-FFFF-FFFF-0F 

Web Portal 16.x 
WP16-ND-00001-0000-0000-00FB-EFBE-FBEF-BEFB-EFBE-F800-000A 

PDK2 
PD16-FL-00001-0000-0000-00FB-EFBE-FBEF-BEFB-EFBE-F800-000A 

///////////////////// поиск почта mail

выборка по группам 
label:алексей -label:газар -label:настя -label:ольга -label:фотовывод/кролик -label:наталья -label:люба -label:поставщики/европапир -label:поставщики/бронко -label:поставщики/heidelberg -label:поставщики/папирус столица after:2016/10/01 


выборка по поставщику и времени
1106 label:поставщики-дшс-дитеко filetype:eps after:2020/10/01 before:2021/06/21

выборка по поставщику и файлу
1106 label:поставщики-дшс-дитеко filetype:eps

label:алексей -label:газар -label:настя -label:ольга -label:фотовывод/кролик -label:наталья -label:люба -label:поставщики/европапир -label:поставщики/бронко -label:поставщики/heidelberg -label:поставщики/папирус столица after:2016/10/01 before:2017/06/01 has:attachment size:8e+6         
            
label:НазваниеМеткиПользователя         
            
-label:НазваниеМеткиПользователя    ИСКЛЮЧИТЬ ИЗ ПОИСКА     
            
after:2016/10/01 before:2017/06/01  Диапазон поиска     
            
has:attachment size:8e+6    Прикрепленные файлы     
            
size:8e+6   Размер файло в битах (5 мегабайт)       
filetype:rtf    тип файла       
            
after:2018/12/05 before:2018/12/06 +ходюк           

//////////////////// ВПР excel
[СТАС2из индизайна] целый столбик
[СТАС1из инндизайна] сравнивать с этой строчкой

=ИНДЕКС([СТАС2из индизайна];ПОИСКПОЗ($C2;[СТАС1из инндизайна];0))



//////////////////// Размеры конвертов
Размеры современного конверта строго базируются на стандартах бумажных листов. К примеру, в конверт Е65 (евроконверт) помещается сложенный втрое лист А4; в конверт С6 — А4 — сложенный вчетверо, либо А5, сложенный пополам; в конверт С5 — лист формата А5 или А4, сложенный вдвое; в конверт С4 — лист, или журнал формата А4.               
Существуют также конверты форматов К7, К8, К65 и К5, предназначенные для поздравительных открыток. Стандартный российский конверт — это С6 (114х162 мм) . Именно данный формат являлся основным на территории бывшего СССР до 1997 г. , когда был официально введен «Eвростандарт» - Е65.               
Размеры конвертов в мм:             
                
C4 - 229×324                
C5 - 162×229                
C6 - 114×162                
e65 - 110×220               
c65 - 114×229               



//////////////////// BAT 

//////////////////////-- Создает папки для Виндовса

md 3D Objects, Documents, Downloads, Music, Videos, Pictures, Desktop

//////////////////////-- Создает папку для каждого файла

for %%F in (*.*) do (
md "%%~nF"
move "%%F" "%%~nF"
)
///////////////////////////// объеденить файлы txt

сd . >output.txt
FOR %%f IN  (*.txt) DO Type "%%f"  >>output.txt

//////////////////////////// объеденить файлы rtf

сd . >output.rtf
FOR %%f IN  (*.rtf) DO Type "%%f"  >>output.rtf

/////////////// Windows удаляем недавно открыте  отключить быстрый доступ

Отключаем в Проводнике быстрый доступ к часто используемым файлам в Windows 10
WIN + E   ВИД\\параметры\\общее\\показать часто используемые папки на панели быстрого доступа

https://ichip.ru/sovety/otklyuchaem-v-provodnike-bystryjj-dostup-k-chasto-ispolzuemym-fajjlam-v-windows-10-196252


///////////////////  MBR  ДИСК КОНВЕРТИРОВАТЬ ИЗ gpt mbr для Windows
GPT
shift10
diskpart
list disk
select disk 0
clean
convert mbr
exit
exit
обновить

//////////// USB
если не видит внешнего USB
службы \\ виртуальный диск ВКЛЮЧИТЬ


///////////////////////////// ТОТАЛ КОММАНДЕР TOTAL GREEP


 |а|б|в|г|д|е|ж|з|и|й|к|л|м|н|о|п|р|с|т|у|ф|х|ц|ч|ш|ы|ь|э|ю|я
_|a|b|v|g|d|e|zh|z|i|y|k|l|m|n|o|p|r|s|t|u|f|h|c|ch|sh|y|j|e|yu|ya


А Б В Г Д Е Ё Ж З И Й К Л М Н О П Р С Т У Ф Х Ц Ч Ш Щ Ъ Ы ЬЭ Ю Я

B

\<(?i)приме(р|ры|ров|ре|ра)\>:

(.+)\?

I
(\(.+\))

noBrake
(?<= )((в|во|без|до|из|к|ко|на|по|о|от|перед|при|через|с|у|не|за|над|для|об|под|про|и|а|но|да|или|ли|бы|то|что|как|я|он|мы|они|ни)( |\. |, ))+
(?<= )|(?<=^))((В|Во|Без|До|Из|К|Ко|На|По|О|От|Перед|При|Через|С|У|Нет|За|Над|Для|Об|Под|Про|И|А|Но|Да|Или|Ли|Бы|То|Что|Как|Я|Он|Мы|Они|Ни) )+
(?<=) (~=)
(?<=\d)(.)

///////// ПОИСК

///в этом месяце
dm:thismonth
/// сегодня
dm:today
///пустые папки
empty:
///за весь год
january|february|march|april|may|june|july|august|september|october|november|december
///типы файлов
*.pdf|*.sdf|*.doc*
///диапазон времени "с по настоящий день"
 dm:5/12/2020
с такой то по такую дату
 dm:1/08/2021..31/08/2021
 ///исключить из поиска
 * !C:\ !E:\$





\\cifraserver4\2020\10-ОКТЯБРЬ\
\\cifraserver4\2020\10-ОКТЯБРЬ\ *.pdf dm:thismonth

\\cifraserver4\2020\10-ОКТЯБРЬ\ *.pdf dm:thismonth А3|place

============================================================

Данные для подключения по RDP 188.143.136.122:23392
CifraServerUser
Cifra2019

адрес 188.143.136.122:23392
login  CifraServerUser
Pass   Cifra2019

на виртуалке user
pass 159357

\\autocheck\SW data это к расшаренным папкам

Пароль 2668
192.168.0.91
========================================


https://pythontutor.ru/lessons/inout_and_arithmetic_operations/

//////////////////////////////





10 фотостоков на все случаи жизни:

    Unsplash.com – часто обновляемый сток с большой коллекцией фотографий. Свежие подборки, реалистично улыбающиеся люди и отличные фото архитектуры, города и природы. Можно найти качественную фотографию практически под любую тематику.
    Realisticshots.com – очень много фотографий из жизни людей. Все грани жизни, темп и насыщенность.
    Lifeofpix.com – необычные фотографии из повседневной жизни, удивительные пейзажи и городские сцены. Современные и незамыленные фотографии с достаточной степенью обработки.
    Gratisography.com – гипертрофированные позы и эмоции людей, сток для поиска изображений с сильной коррекцией и сложной эмоциональной наполненностью. Много изображений людей в странных позах и со сложной мимикой.
    Flickr.com – фотографии из архива всемирной библиотеки. Полностью доступная лицензия, текстурные ретро изображения, графика и многое другое со страниц раритетных изданий.
    Kaboompics.com – необычные и эксклюзивные бесплатные фотографии. Можно искать по цветовой гамме и даже ориентации фотографии (вертикальная или горизонтальная).
    Foodiesfeed.com – отличный сток с изображениями различных блюд всех кухонь мира.
    Mmtstock.com – бесплатный сток с реалистичными иллюстрациями и видеороликами для вашего буктрейлера и рекламы.
    Jaymantri.com – уникальная пейзажная съемка, много текстур и крупных планов.
    Cupcake.nilssonlee.se – авторский сток с абсолютно бесплатными фотографиями общественной среды, растений, пейзажей и кадрами из повседневности.
    http://flag.kremlin.ru/emblem/  - ВЕКТОРНАЯ ГОС СИМВОЛИКА РФ ГЕРБЫ


////////////////////////////











||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
|||||||||||||||||||||||||||||||||SQL MySQL |||||||||||||||||||||||||||||||||||||||||||||||||||
|||||||||||||||||||||||||||||||||SQL MySQL |||||||||||||||||||||||||||||||||||||||||||||||||||
|||||||||||||||||||||||||||||||||SQL MySQL |||||||||||||||||||||||||||||||||||||||||||||||||||
|||||||||||||||||||||||||||||||||SQL MySQL |||||||||||||||||||||||||||||||||||||||||||||||||||
|||||||||||||||||||||||||||||||||SQL MySQL |||||||||||||||||||||||||||||||||||||||||||||||||||
|||||||||||||||||||||||||||||||||SQL MySQL |||||||||||||||||||||||||||||||||||||||||||||||||||
|||||||||||||||||||||||||||||||||SQL MySQL |||||||||||||||||||||||||||||||||||||||||||||||||||
|||||||||||||||||||||||||||||||||SQL MySQL |||||||||||||||||||||||||||||||||||||||||||||||||||
|||||||||||||||||||||||||||||||||SQL MySQL |||||||||||||||||||||||||||||||||||||||||||||||||||
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||



|||||||||||||||||||||SQL Sequences run in this order||||||||||||||||||||||||||||||||||

FROM + JOIN
>>>>>>>>>>>>>>>>
WHERE
>>>>>>>>>>>>>>>>
GROUP BY
>>>>>>>>>>>>>>>>
HAVING
>>>>>>>>>>>>>>>>
SELECT (Windows FUNCTIONS HAPPEN HERE)
>>>>>>>>>>>>>>>>
ORDER BY
>>>>>>>>>>>>>>>>
LIMIT



>>>>>>FROM + JOIN >>>>>> >>>>>>WHERE >>>>>> >>>>>>GROUP BY >>>>>> >>>>>>HAVING >>>>>> >>>>>>SELECT (Windows FUNCTIONS HAPPEN HERE) >>>>>> >>>>>>ORDER BY >>>>>> >>>>>>LIMIT 
>>>>>>FROM + JOIN >>>>>> >>>>>>WHERE >>>>>> >>>>>>GROUP BY >>>>>> >>>>>>HAVING >>>>>> >>>>>>SELECT (Windows FUNCTIONS HAPPEN HERE) >>>>>> >>>>>>ORDER BY >>>>>> >>>>>>LIMIT 
>>>>>>FROM + JOIN >>>>>> >>>>>>WHERE >>>>>> >>>>>>GROUP BY >>>>>> >>>>>>HAVING >>>>>> >>>>>>SELECT (Windows FUNCTIONS HAPPEN HERE) >>>>>> >>>>>>ORDER BY >>>>>> >>>>>>LIMIT 
>>>>>>FROM + JOIN >>>>>> >>>>>>WHERE >>>>>> >>>>>>GROUP BY >>>>>> >>>>>>HAVING >>>>>> >>>>>>SELECT (Windows FUNCTIONS HAPPEN HERE) >>>>>> >>>>>>ORDER BY >>>>>> >>>>>>LIMIT 





/////////////SQL

ФИО                             АТРИБУТ
сотрудник                       ОТНОШЕНИЕ
4                               РАЗМЕРНОСТЬ
002, ИВАНОВ ИИ. инжинер         КОРТЕЖ
3                               МОЩНОСТЬ




AS - "в качестве": левый операнд AS(в качестве) правого операнда, можно также перевести как "обзови всё что слева фразой справа"

CASE - нет, это не кейс, но этимология таже, чемодан так называют потому что ему подобные брали на всякий СЛУЧАЙ, в данном контексте это слово стоит понимать как "В СЛУЧАЕ"
WHEN - продолжим про случай, переводится как "КОГДА"
THEN - вот именно "ТОГДА"
ELSE - буквально переводится как "В ПРОЧЕМ" или "В ОСТАЛЬНЫХ СЛУЧАЯХ"
END - конец, амба, приехали, заканчивай съёмку

SELECT - кто не играл в Денди/Сегу? В данном случае употребляется в повелительном наклонении - приказ СУБД выбрать что-то
FROM - да-да как вы догадалсь уже наверное - "ИЗ" чего-то (или отобрать у кого-то, наше дело маленькое - сказать, а у кого СУБД отбирать будет... Проблемы индейцев шерифов не ... волнуют)
JOIN - Наслаждайся!!! Конечно первое, и в данном случае - правильное значение этого слова: присоединяйся!
`Даша` (INNER)JOIN `Петя` - сегодня они встречаются в ресторанчике как-раз на пол пути от Пети к Даше
`Даша` LEFT(INNER) JOIN `Петя` - Петя пошёл налево, но не на грядки, а - к Даше, причём в данном случае - домой к Даше.
Ну а если `Даша` RIGHT(INNER) JOIN `Петя` - то, видимо Даша не дождалась Петю и пошла к нему сама (разумеется - не налево).

`Даша` LEFT OUTER JOIN `Петя` - Петя пришёл во двор к Даше, и Даша вышла туда-же(причём - оба со всеми своими пожитками-нажитками, видимо, куда-то собрались).
`Даша` CROSS JOIN `Петя` - м-м-м... дайте ка подумать... А-а-а... Петя с Дашей переехали в другую квартиру(или дом) и наплодили много маленьких Петь и Даш всех возможных вариантов сочетания Пети с Дашей(надеюсь - не слишком пошло)
WHERE - "Где-где...? - В Караганде... которая находится в РФ" или "в гнезде в котором именно 2 яйца, а не 3-5-6", кому как нравится...

BY - не путайте с "BYE", а то - пошлёт вас СУБД в ту самую баню... Не знаю как другим, но мне большинство проблем "BY"-барабану, я - заядлый оптимист =D

ну а дальше ничего особо сложного и нет:
GROUP - в данном случае скорее глагол: СГРУППИРУЙ то, да сё...
HAVING - имеющих 3 головы AND 5 хвостов
ORDER - в каждом доме должен быть, а в голове и подавно(плохо, когда там каша-малаша)!!! ;)
PARTITION - раздел, в данном случае - не глагол!!! Существительное - "разделение", "разграничение".
UNION - это когда Иа вернули хвост... получился UNION ослика и его хвостика =)

Как же я мог забыть про оператор - OVER:
применяется к оконным фнкциям, указывая им в каких "PARTITION BY"-йнах задуманное вершить, и в каком "ORDER BY" тамошних("PARTITION BY"-йных) прихожан обслуживать...
Первым значением слова является наречие "через", в данном контексте - "вот там, по всей 'PARTITION BY'-йной местности"

LIKE - "I like to move it - move it..." Нет, это не лайк, ну, во всяком случае - не в том смысле в котором вы могли бы подумать... 'Даша' LIKE 'Петя' не значит что Даше нравится Петя, в даном случае это предлог "как" или причастие "похож", то биш,- разве что только количеством букв в имени. В языке SQL обзывается паттерном(шаблоном)
BETWEEN - один шаг BETWEEN любовь AND ненависть

PRIMARY - помните такого: Пётр PRIME? Переводится как "первичный", имеется в виду - "KEY", эта парочка слов творит магию СУБД определяя золотой ключик. Но, стоит заметить что это не единственный магический артефакт, есть ещё один - FOREIGN, тоже - ключик. Эти ключи - истинная сила RELATION-ной модели базы данных, именно они и творят чудеса слияния головы, хвоста и ног в нечто большее и прекрасное. Relation - переводится как "отношение" чего-то к чему-то, либо как "связь" чего-то с чем-то(кого-то с кем-то - тоже).

UPDATE - сокращение от "Up to date", дословно переводится как "поднято до даты(последней)", только в контексте SQL это - глагол, который говорит базе - Обнови!
SET - нет, это не про восточную кухню, это глагол - установи
INSERT - это из оперы про: запихни, впихни, воткни INTO-дато =D
DELETE - интересное слово: ДЕЛЕТЕ... Как вспомню знакомство мамы с компуктером... Слово "ДЕЛЕТЕ" - глагол "удали" в исключительно повелительном наклонении.
DROP - О-о-о-о, вот мы и добрались до самого интересного... Никогда, Вы слышыте меня? Никогда не бросайте каку!!! На время работы с БД забудьте чему вас учили родители по данному поводу в детстве... Каку можно и поднять, а вот TABLE который по идее - нечто "Таблетное", например: таблица(а может и TAB чьего-то лица, ибо "Tab" - нарицательное обозначающее некую ровную поверхность прямоугольной формы), или что ещё хуже - DATABASE, уйдут в небытие, сразу и не замедлительно!!! Это относится и к мегаинтересному слову "ДЕЛЕТЕ", с небольшой оговоркой...

Что-то я - увлёкся =D


/////////////////////




https://www.youtube.com/watch?v=R2XGaOz42i8&t=4s
саблайм и блокнот смотри в оба глаза

\\\\


SELECT title,
       author,
       amount,
       -- ROUND это округление а не название столбца названия тут вообще нет (оно в формуле) но столбец преобразуется в new_price
       ROUND ((price*0.7), 2) AS new_price
FROM book;



\\\\\


https://www.youtube.com/watch?v=ybNTwkeWRzQ&list=PLKl9v2TQvIkq4i_hZwZ1PmobxJSkIGwBf&index=2

МАКСИМ КУХАРЬ СМОТРИ И ВЫПОЛНЯЙ ВСЕ
SELECT * FROM WHERE



///////////////////////////////////////////////////////////////////////////////////////////////////////////////
INSTAL MY SQL  UBUNTU LINUX

MySQL консоль MySQL консоль MySQL консоль MySQL консоль MySQL консоль MySQL консоль MySQL консоль MySQL консоль 
#
/* ВМЕСТО юРутт пПасс пишем свое первые маленькие буквы оставляем как есть */
mysql.exe -uROOT -pPASS
#
//////// РАБОТА С ЮЗЕРОМ \\\\\\\\\\
#
/* зашел в основную базу */
USE mysql; 
#
/*покажет пользователя */
SELECT USEr, host FROM USEr;
#
/* пользователь на локалхосте если надо определенный хост надо его знать */
CREATE USEr 'noon-root'@'localhost' identified by 'root';
#
/* добавить привелегии все */
grant all privilleges on *. * to 'noon-root'@'localhost';
#
/* удалить все права */
drop USEr 'noon-root'@'localhost';
#
//////// РАБОТА С ЮЗЕРОМ \\\\\\\\\\



sudo apt update
sudo apt upgrade
sudo apt install mysql-server
sudo apt install mysql-client

-- test
sudo mysql
show databases; 
exit
-- test
sudo snap search mysql --search

sudo mysql_secure_installation




сброс пароля

sqlcmd -S <SQLInstanceName>-U <UserName> -P <Password>

sqlcmd -S -U -P

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////






///////////////////////////////////////////////////////////////////////////////////////////////////////////////
MySQL консоль MySQL консоль MySQL консоль MySQL консоль MySQL консоль MySQL консоль MySQL консоль MySQL консоль 
#
#
#
#
#
/* ВМЕСТО юРутт пПасс пишем свое первые маленькие буквы оставляем как есть */
mysql.exe -uROOT -pPASS
#
#
#
#
#
//////// РАБОТА С ЮЗЕРОМ \\\\\\\\\\
#
#
#
#
#
/* зашел в основную базу */
USE mysql; 
#
#
#
#
#
/*покажет пользователя */
SELECT USEr, host FROM USEr;
#
#
#
#
#
/* пользователь на локалхосте если надо определенный хост надо его знать */
CREATE USEr 'noon-root'@'localhost' identified by 'root';
#
#
#
#
#
/* добавить привелегии все */
grant all privilleges on *. * to 'noon-root'@'localhost';
#
#
#
#
#
/* удалить все права */
drop USEr 'noon-root'@'localhost';
#
#
#
#
#
//////// РАБОТА С ЮЗЕРОМ \\\\\\\\\\


SHOW DATABASES;

\\\\\\\\\\\\
(CREATE DATABASE test;
drop DATABASE test;)
\\\\\\\\\\\\\\\\\

USE test;
SHOW tables FROM test;
SHOW columns FROM table FROM test;
\\\\\\\\\\\
CREATE table tableName
(
id int(11) not null,
name varchar(50) null,
age int(11) not null,
PRIMARY key(id)
);
\\\\\\\\\\\\
SHOW columns FROM table FROM test;
mysql> SHOW CREATE table tablename;

\\\\\\\\\\\
drop table tablename; 
\\\\\\\\\\


 CREATE TABLE `tablename` (
  `id` int NOT NULL,
  `name` varchar(50) DEFAULT NULL,
  `age` int NOT NULL,
  PRIMARY KEY (`id`)
)
 ENGINE=InnoDB DEFAULT CHARSET=utf8 |



/*показать DB*/
SHOW DATABASES;
/* создать DB */
CREATE DATABASE название testDB;
/* удалить DB */
drop DATABASE testDB;
/* создать DB с русской кодировкой utf 8*/
CREATE DATABASE testDButf character set utf8 collate utf8_general_ci;
/* войти внутрь используемой DB */
USE testDButf;

/* создать таблицу(table) c наполнением */
CREATE table tableName
(
id int(11) not null,
name varchar(50) null,
age int(11) not null,
PRIMARY key(id)
);
/* показать таблицы(tables) внутри схемы testDButf */
SHOW tables FROM testDButf;
+---------------------+
| Tables_in_testDButf |
+---------------------+
| tableName           |
+---------------------+
/* показать таблицы внутри схемы тест показать список
структура столбцов(columns) */

SHOW columns FROM tablename FROM testDButf;

+-------+-------------+------+-----+---------+-------+
| Field | Type        | Null | Key | Default | Extra |
+-------+-------------+------+-----+---------+-------+
| id    | int         | NO   | PRI | NULL    |       |
| name  | varchar(50) | YES  |     | NULL    |       |
| age   | int         | NO   |     | NULL    |       |
+-------+-------------+------+-----+---------+-------+

/* показать структуру таблицы */
mysql> SHOW CREATE table tablename;

 CREATE TABLE `tablename` (
  `id` int NOT NULL,
  `name` varchar(50) DEFAULT NULL,
  `age` int NOT NULL,
  PRIMARY KEY (`id`)
)
 ENGINE=InnoDB DEFAULT CHARSET=utf8 |

/*удалить таблицу */
drop table tablename; <<<<<< не трогать без надобности))))


/*
Добавить запись в таблицу можно иметь значения NULL
*/
insert into tableName (id, name, age) values (1, "Misha", 41);
/*
ЕСЛИ уверен в таблице можно сократить запись НЕЛЬЗЯ ИМЕТЬ ЗНАЧЕНИЙ NULL таблица сместится
*/
insert into tableName values (2, "Dasha", 12);

/*
добавить множество 
*/
insert into tableName (id, name, age) values (1, "Misha", 41), (2, "Dasha", 12), (3, "Marina", 35);

/*
посмотреть запись
*/
SELECT * FROM tablename;



/*импорт базы*/
--посмотреть базы которые есть
SHOW DATABASES;
--посмотреть таблицы в базе тест
SHOW tables FROM test;
--посмотреть СТРУКТУРУ таблицы
SHOW columns FROM tablename FROM test;
--выбрать базу данных 
use test;
--выбор таблицы TABLENAME указать свою таблицу
insert
insert into tableName (id, name, age) values (1, "Misha", 41);

source c:\.... путь до файла

to import >> (on mac at least)

source  <address_of_file>; --ex:
source  /USErs/admin/Desktop/mysqlsampleDATABASE.sql





MySQL консоль MySQL консоль MySQL консоль MySQL консоль MySQL консоль MySQL консоль MySQL консоль MySQL консоль 
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////




////////////////////////////////////////////////////////////////////////////////////////////////////////////////
задания с других сайтов задания с других сайтов задания с других сайтов задания с других сайтов
/* указать только четные  */
SELECT DISTINCT city FROM station  WHERE (station.id MOD 2) = 0
/*
исключить одно из другова 
*/
SELECT (COUNT(city) - COUNT(DISTINCT city)) FROM station

Выбрать самый короткий и самый дленный город(слово в строке)

SELECT city, LENGHT(city) FROM station
order by LENGHT(city),city asc
limit 1;
SELECT city, LENGHT(city) FROM station
order by LENGHT(city) desc
limit 1;

--переименовать таблицу
SELECT color as цвет FROM products 
--лимит строк
SELECT color as цвет FROM products  LIMIT 3

ORDER by упорядочивание ASC а....я  desc я.....а

SELECT * FROM auto order by  price, autosalon
SELECT * FROM auto order by price desc, autosalon asc

--поиск по условию IN
SELECT * FROM products WHERE Material IN('кожа', 'дсп')

--исключения мерседеса из брендов
SELECT * FROM auto WHERE brAND != 'mercedes-benz' 
--ВЫБОРКА по цвету с исключение материала
SELECT * FROM products WHERE color IN('белый','красный','бежевый')  AND material != 'дсп'
--выборка по числам
SELECT phone, shop, price FROM phones WHERE Quantity IN(5.12.18)
SELECT * FROM auto WHERE brAND='bmw' AND model='x5'
--выборка диапазона цены
SELECT * FROM auto WHERE price>=4000000 AND price<=6000000
--диапазон выборки BETWEEN
SELECT phone, shop, price FROM phones WHERE price BETWEEN 32000 AND 42000
--отрицательная выборка
SELECT phone, shop, price FROM phones WHERE price NOT BETWEEN 32000 AND 42000



-- посчитать кол во знаков в поле
--SELECT LENGHT(поле) FROM имя_таблицы WHERE условие


SELECT MIN(CITY),LENGTH(CITY) FROM STATION GROUP BY LENGTH(CITY) ORDER BY LENGTH(CITY);

/*
    Amo 3

    Acme 4

    Alton 5

    Agency 6

    Addison 7

    Allerton 8

    Arlington 9

    Arrowsmith 10

    Aliso Viejo 11

    Church Creek 12

    Andersonville 13

    Cape Girardeau 14

    Bowdon Junction 15

    North Middletown 16

    Frankfort Heights 17

    West Baden Springs 18

    Marine On Saint Croix 21
*/

--верный вариант

--найти самое длинное и короткое слово и посчитать символы вывести слово а рядом количество знаков. Сначало по возрастанию потом по убыванию

select city, length(city) from station
order by length(city),city asc -- для меня осталось загадкой почему пишем ,sity asc
limit 1;
select city, length(city) from station
order by length(city) desc --а в этом случайе не пишем sity desc
limit 1;




-- неверные варианты
select city , min(length(city)) , max(length(city)) from station
-- неверные варианты-- неверные варианты
SELECT *
FROM
    (SELECT CITY, LENGTH(CITY)
    FROM STATION
    ORDER BY LENGTH(CITY), CITY)
WHERE ROWNUM = 1
UNION
SELECT *
FROM
    (SELECT CITY, LENGTH(CITY)
    FROM STATION
    ORDER BY LENGTH(CITY) DESC, CITY)
WHERE ROWNUM = 1;
-- неверные варианты


-- запросить слова начинающиеся на гласные с использованием GREP выражения


SELECT DISTINCT city FROM station WHERE city REGEXP "^[aeiou].*";
-- запросить слова начинающиеся на гласные БЕЗ ИСПОЛЬЗОВАНИЯ GREP выражения
SELECT DISTINCT city FROM station WHERE city RLIKE '^[aeiou]';

//////////////////////////////////////////////////////////////////////////////////////////////////////////






/////////////////////////////////////////////////////////////////////////////////////////////////////////////
GREP GREP GREP GREP GREP GREP GREP GREP GREP GREP GREP GREP GREP GREP GREP GREP GREP GREP GREP GREP GREP GREP 

[0-9][\s][a-zA-Z]
[0-9][\t][a-zA-Z]
если положительный просмотр назад есть цифры а положительный просмотр вперед есть буквы то он найдет пробел между ними
(?<=[0-9])\s(?=[a-zA-Z])
(?<=[0-9])\s(?=[])

^(?=[0-9])
найти цифры до цифры после 2 цифры и точка
(?<=[0-9])\s(?=[0-9]{2}\.)
найти маленькие буквы положительно вперед найти две последовательно стоящие большие буквы положительно назад
(?<=[a-z])\s(?=[A-Z]{2})

GREP GREP GREP GREP GREP GREP GREP GREP GREP GREP GREP GREP GREP GREP GREP GREP GREP GREP GREP GREP GREP GREP GREP 
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
EXCEL EXCEL EXCEL EXCEL EXCEL EXCEL EXCEL EXCEL EXCEL EXCEL EXCEL EXCEL EXCEL EXCEL EXCEL EXCEL EXCEL EXCEL EXCEL 

="insert intro ТАБЛИЦА values ("&&","&&","&&","&&")"
="insert intro STATION values ("&A2&","&B2&","&C2&","&D2&","&E2&")"

EXCEL EXCEL EXCEL EXCEL EXCEL EXCEL EXCEL EXCEL EXCEL EXCEL EXCEL EXCEL EXCEL EXCEL EXCEL EXCEL EXCEL EXCEL EXCEL 
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
https://sql-ex.ru/ https://sql-ex.ru/ https://sql-ex.ru/ https://sql-ex.ru/ https://sql-ex.ru/ https://sql-ex.ru/ 

/* 1
Найдите номер модели, скорость и размер жесткого диска для всех ПК стоимостью менее 500 дол. Вывести: model, speed и hd
 */
SELECT DISTINCT model, speed, hd 
FROM PC 
WHERE price < 500 
ORDER BY 2 DESC
/* 2
Найдите производителей принтеров. Вывести: maker 
*/
SELECT DISTINCT maker
FROM Product
WHERE type = 'Printer'
/* 3
Найдите номер модели, объем памяти и размеры экранов ПК-блокнотов, цена которых превышает 1000 дол. 
*/
SELECT DISTINCT model, ram, screen FROM Laptop
WHERE price > 1000
/* 4
Найдите все записи таблицы Printer для цветных принтеров. 
*/
SELECT DISTINCT * FROM Printer
WHERE color = 'y'
/* 5
Найдите номер модели, скорость и размер жесткого диска ПК, имеющих 12x или 24x CD и цену менее 600 дол. 
*/
SELECT model, speed, hd FROM PC
WHERE cd IN ('12x', '24x') AND 
price < 600
/* 6
Для каждого производителя, выпускающего ПК-блокноты c объёмом жесткого диска не менее 10 Гбайт, найти скорости таких ПК-блокнотов. Вывод: производитель, скорость. 
*/
SELECT DISTINCT Product.maker, Laptop.speed
FROM  Product, Laptop
WHERE Product.model = Laptop.model 
AND Laptop.hd >= 10
/* 7
Найдите номера моделей и цены всех имеющихся в продаже продуктов (любого типа) производителя B (латинская буква). 
*/
SELECT DISTINCT PC.model, PC.price FROM PC JOIN Product ON PC.model=Product.model WHERE maker='b'
UNION
SELECT DISTINCT Laptop.model, Laptop.price FROM Laptop JOIN Product ON Laptop.model=Product.model WHERE maker='b'
UNION
SELECT DISTINCT Printer.model, Printer.price FROM Printer JOIN Product ON Printer.model=Product.model WHERE maker='b'
/* 8
Найдите производителя, выпускающего ПК, но не ПК-блокноты. 
*/
SELECT DISTINCT Product.maker FROM Product WHERE type='PC'
EXCEPT
SELECT DISTINCT Product.maker FROM Product WHERE type='Laptop'
/* 9
Найдите производителя, выпускающего ПК, но не ПК-блокноты. 
*/
SELECT DISTINCT maker FROM PC JOIN Product ON PC.model = Product.model WHERE type='PC' AND speed >= 450
/* 10
 Найдите модели принтеров, имеющих самую высокую цену. Вывести: model, price ПОДЗАПРОС 
 */
SELECT DISTINCT Printer.model, Printer.price FROM Printer JOIN Product ON Printer.model = Product.model WHERE price = (SELECT MAX (price) FROM Printer)
/* найти минимальный ПОДЗАПРОС (SELECT MIN (price) FROM Printer) */
SELECT DISTINCT Printer.model, Printer.price FROM Printer JOIN Product ON Printer.model = Product.model WHERE price = (SELECT MIN (price) FROM Printer)
/* 11
 Найдите среднюю скорость ПК. 
 */
SELECT AVG(speed) AS AVG_price FROM PC
/* 12
 Найдите среднюю скорость ПК-блокнотов, цена которых превышает 1000 дол. */
/* выбрать уникальные СРЕДНИЕ(скорости) ИМЯстолбца AGV_speed ИЗБазы laptop ГДЕ цена > 1000 
*/
SELECT DISTINCT AVG(speed) AS AVG_speed FROM Laptop WHERE price > 1000
/* 13
 Найдите среднюю скорость ПК, выпущенных производителем A.
Выбрать СРЕДНЮЮ(скорость) СРЕДНЯЯ_скорость ИЗ PC СОЕДЕНИТЬ PC.model = Product.model ГДЕ(Показать) maker='a' 
*/
SELECT AVG(speed) AVG_speed FROM PC JOIN Product ON PC.model = Product.model WHERE maker='a'
/* 14
 Найдите класс, имя и страну для кораблей из таблицы Ships, имеющих не менее 10 орудий. 
 */
SELECT Ships.class, Ships.name, Classes.country FROM Ships JOIN Classes ON Ships.class = Classes.class WHERE numGuns >= 10
/* 15
 Найдите размеры жестких дисков, совпадающих у двух и более PC. Вывести: HD
Оператор SQL HAVING имеет следующий синтаксис:
HAVING aggregate_function(column_name) operator value
Оператор SQL HAVING аналогичен оператору SQL WHERE за тем исключением, что применяется не для всего набора столбцов таблицы, а для набора созданного оператором SQL GROUP BY и применяется всегда строго после него.
Группировать по hd HAVING(аналог WHERE но для набора созданного самим оператором GROUP BY и применяется всегда строго после него ) ВОЗВРАЩАЕТ  записи >= 2
 */
SELECT PC.hd FROM PC GROUP BY hd HAVING COUNT (*) >= 2
/* 16
 Найдите пары моделей PC, имеющих одинаковые скорость и RAM. В результате каждая пара указывается только один раз, т.е. (i,j), но не (j,i), Порядок вывода: модель с большим номером, модель с меньшим номером, скорость и RAM.
разделение таблицы на два столбика PC_1 PC_2 с указанием, порядок вывода: модель с большим номером, модель с меньшим номером, PC_1 > PC_2
*/
SELECT DISTINCT PC_1.model, PC_2.model, PC_1.speed, PC_1.ram, FROM PC PC_1, PC PC_2 WHERE PC_1.speed = PC_2.speed AND PC_1.ram = PC_2.ram AND PC_1.model > PC_2.model 
/* 17
 Найдите модели ПК-блокнотов, скорость которых меньше скорости каждого из ПК.
Вывести: type, model, speed
ВЫДЕЛЯЕМ УНИКАЛЬНЫЕ ЗНАЧЕНИЯ Laptop.model так как model есть в двух таблицах выводим type, speed без указания таблиц так как они уникальны Laptop ОБЪЕДЕНЯЕМ с Product ВКЛЮЧАЕМ (указываем столбики идентичны) Product.model = Laptop.model ГДЕ скорость меньше ВСЕХ (ВЫБРАТЬ скорость ИЗ PC) подзапрос (SELECT speed FROM PC)
*/
SELECT DISTINCT type, Laptop.model, speed FROM Laptop JOIN Product ON Product.model = Laptop.model WHERE speed<ALL (SELECT speed FROM PC)
/* 18
Найдите производителей самых дешевых цветных принтеров. Вывести: maker, price
*/
SELECT maker, Printer.price FROM Printer JOIN Product ON Product.model = Printer.model WHERE price = (SELECT MIN (Printer.price) FROM Printer WHERE color = 'y') AND color='y' GROUP BY maker, price
/* 19
 Для каждого производителя, имеющего модели в таблице Laptop, найдите средний размер экрана выпускаемых им ПК-блокнотов.
Вывести: maker, средний размер экрана.
GROUP BY maker группирует для каждого производителя
*/ 
SELECT maker, AVG(screen) AVG_screen FROM Laptop JOIN Product ON Product.model=Laptop.model GROUP BY maker
/*20
Найдите производителей, выпускающих по меньшей мере три различных модели ПК. Вывести: Maker, число моделей ПК.
*/
/*сначало пишем простое выражение где понятно сколько типов в принцие */
SELECT maker, model FROM Product WHERE type='pc'
/* ВЫБРАТЬ МАКЕР считать(модели) Из продукта Где  Тип="компы" гурппировать по Маркеру ГДЕ количество (моделей)>3*/
SELECT maker, COUNT(model) FROM Product WHERE type='pc' GROUP BY maker HAVING COUNT(model)>=3
/* 21 
Найдите максимальную цену ПК, выпускаемых каждым производителем, у которого есть модели в таблице PC.
Вывести: maker, максимальная цена.
GROUP BY maker группировка по производителям
 */
SELECT maker, MAX(pc.Price) MAX_price, FROM PC JOIN Product ON Product.model=PC.model GROUP BY maker
/* 22 
Для каждого значения скорости ПК, превышающего 600 МГц, определите среднюю цену ПК с такой же скоростью. Вывести: speed, средняя цена.
GROUP BY speed скорости группировка по скорости
 */
SELECT PC.speed, AVG(pc.Price) AVG_price FROM PC WHERE speed>600 GROUP BY speed

/*23
Найдите производителей, которые производили бы как ПК
со скоростью не менее 750 МГц, так и ПК-блокноты со скоростью не менее 750 МГц.
Вывести: Maker
чере пересечение INTERSECT находи в кадой базе значение но не объеденяет их
*/
SELECT maker FROM PC JOIN Product ON PC.model=Product.model WHERE speed>=750
INTERSECT
SELECT maker FROM Laptop JOIN Product ON Laptop.model=Product.model WHERE speed>=750
/*второй вариант решения через вложение*/
SELECT maker FROM PC JOIN Product ON PC.model=Product.model WHERE speed>=750
AND maker IN (SELECT maker FROM Laptop JOIN Product ON Laptop.model=Product.model WHERE speed>=750) GROUP BY maker

/*
24 Перечислите номера моделей любых типов, имеющих самую высокую цену по всей имеющейся в базе данных продукции.
*/

SELECT model FROM(
            SELECT model, price FROM pc
            UNION
            SELECT model, price FROM Laptop
            UNION
            SELECT model, price FROM printer
) SubRequestion1 WHERE price =(
    SELECT MAX(price) FROM(
    SELECT model, price FROM pc
    UNION
    SELECT model, price FROM Laptop
    UNION
    SELECT model, price FROM printer
) SubRequestion2)

/*
25 Найдите производителей принтеров, которые производят ПК с наименьшим объемом RAM и с самым быстрым процессором среди всех ПК, имеющих наименьший объем RAM. Вывести: Maker
*/
SELECT DISTINCT maker FROM pc JOIN product ON product.model=pc.model WHERE maker IN
(
    SELECT DISTINCT maker FROM product WHERE type = 'printer'
    )
    AND speed = 
    (
            SELECT MAX(speed) FROM pc WHERE ram = 
        (
            SELECT MIN(ram) FROM pc
            )
        )
    AND ram = 
    (
        SELECT mIN(ram)FROM pc
        )








https://www.coursera.org/learn/foundations-data/lecture/N5lvQ/data-analytics-in-everyday-life


отпишись ОТ КУРСА

ФИО                             АТРИБУТ
сотрудник                       ОТНОШЕНИЕ
4                               РАЗМЕРНОСТЬ
002, ИВАНОВ ИИ. инжинер         КОРТЕЖ
3                               МОЩНОСТЬ




AS - "в качестве": левый операнд AS(в качестве) правого операнда, можно также перевести как "обзови всё что слева фразой справа"

CASE - нет, это не кейс, но этимология таже, чемодан так называют потому что ему подобные брали на всякий СЛУЧАЙ, в данном контексте это слово стоит понимать как "В СЛУЧАЕ"
WHEN - продолжим про случай, переводится как "КОГДА"
THEN - вот именно "ТОГДА"
ELSE - буквально переводится как "В ПРОЧЕМ" или "В ОСТАЛЬНЫХ СЛУЧАЯХ"
END - конец, амба, приехали, заканчивай съёмку

SELECT - кто не играл в Денди/Сегу? В данном случае употребляется в повелительном наклонении - приказ СУБД выбрать что-то
FROM - да-да как вы догадалсь уже наверное - "ИЗ" чего-то (или отобрать у кого-то, наше дело маленькое - сказать, а у кого СУБД отбирать будет... Проблемы индейцев шерифов не ... волнуют)
JOIN - Наслаждайся!!! Конечно первое, и в данном случае - правильное значение этого слова: присоединяйся!
`Даша` (INNER)JOIN `Петя` - сегодня они встречаются в ресторанчике как-раз на пол пути от Пети к Даше
`Даша` LEFT(INNER) JOIN `Петя` - Петя пошёл налево, но не на грядки, а - к Даше, причём в данном случае - домой к Даше.
Ну а если `Даша` RIGHT(INNER) JOIN `Петя` - то, видимо Даша не дождалась Петю и пошла к нему сама (разумеется - не налево).

`Даша` LEFT OUTER JOIN `Петя` - Петя пришёл во двор к Даше, и Даша вышла туда-же(причём - оба со всеми своими пожитками-нажитками, видимо, куда-то собрались).
`Даша` CROSS JOIN `Петя` - м-м-м... дайте ка подумать... А-а-а... Петя с Дашей переехали в другую квартиру(или дом) и наплодили много маленьких Петь и Даш всех возможных вариантов сочетания Пети с Дашей(надеюсь - не слишком пошло)
WHERE - "Где-где...? - В Караганде... которая находится в РФ" или "в гнезде в котором именно 2 яйца, а не 3-5-6", кому как нравится...

BY - не путайте с "BYE", а то - пошлёт вас СУБД в ту самую баню... Не знаю как другим, но мне большинство проблем "BY"-барабану, я - заядлый оптимист =D

ну а дальше ничего особо сложного и нет:
GROUP - в данном случае скорее глагол: СГРУППИРУЙ то, да сё...
HAVING - имеющих 3 головы AND 5 хвостов
ORDER - в каждом доме должен быть, а в голове и подавно(плохо, когда там каша-малаша)!!! ;)
PARTITION - раздел, в данном случае - не глагол!!! Существительное - "разделение", "разграничение".
UNION - это когда Иа вернули хвост... получился UNION ослика и его хвостика =)

Как же я мог забыть про оператор - OVER:
применяется к оконным фнкциям, указывая им в каких "PARTITION BY"-йнах задуманное вершить, и в каком "ORDER BY" тамошних("PARTITION BY"-йных) прихожан обслуживать...
Первым значением слова является наречие "через", в данном контексте - "вот там, по всей 'PARTITION BY'-йной местности"

LIKE - "I like to move it - move it..." Нет, это не лайк, ну, во всяком случае - не в том смысле в котором вы могли бы подумать... 'Даша' LIKE 'Петя' не значит что Даше нравится Петя, в даном случае это предлог "как" или причастие "похож", то биш,- разве что только количеством букв в имени. В языке SQL обзывается паттерном(шаблоном)
BETWEEN - один шаг BETWEEN любовь AND ненависть

PRIMARY - помните такого: Пётр PRIME? Переводится как "первичный", имеется в виду - "KEY", эта парочка слов творит магию СУБД определяя золотой ключик. Но, стоит заметить что это не единственный магический артефакт, есть ещё один - FOREIGN, тоже - ключик. Эти ключи - истинная сила RELATION-ной модели базы данных, именно они и творят чудеса слияния головы, хвоста и ног в нечто большее и прекрасное. Relation - переводится как "отношение" чего-то к чему-то, либо как "связь" чего-то с чем-то(кого-то с кем-то - тоже).

UPDATE - сокращение от "Up to date", дословно переводится как "поднято до даты(последней)", только в контексте SQL это - глагол, который говорит базе - Обнови!
SET - нет, это не про восточную кухню, это глагол - установи
INSERT - это из оперы про: запихни, впихни, воткни INTO-дато =D
DELETE - интересное слово: ДЕЛЕТЕ... Как вспомню знакомство мамы с компуктером... Слово "ДЕЛЕТЕ" - глагол "удали" в исключительно повелительном наклонении.
DROP - О-о-о-о, вот мы и добрались до самого интересного... Никогда, Вы слышыте меня? Никогда не бросайте каку!!! На время работы с БД забудьте чему вас учили родители по данному поводу в детстве... Каку можно и поднять, а вот TABLE который по идее - нечто "Таблетное", например: таблица(а может и TAB чьего-то лица, ибо "Tab" - нарицательное обозначающее некую ровную поверхность прямоугольной формы), или что ещё хуже - DATABASE, уйдут в небытие, сразу и не замедлительно!!! Это относится и к мегаинтересному слову "ДЕЛЕТЕ", с небольшой оговоркой...

Что-то я - увлёкся =D

///////////////////////////////////////////////////


чистая база MySQL

CREATE SCHEMA `stepik`;
CREATE TABLE `stepik`.`book` (
  `book_id` INT NOT NULL,
  `title` VARCHAR(45) NULL,
  `author` VARCHAR(45) NULL,
  `price` DECIMAL(6,2) NOT NULL,
  `amount` INT NOT NULL,
  PRIMARY KEY (`book_id`));
USE `stepik`;
insert INTO book (book_id, title, author, price, amount) values (1, 'Мастер и Маргарита', 'Булгаков М.А.', 670.99, 3);
insert INTO book (book_id, title, author, price, amount) values (2, 'Белая гвардия', 'Булгаков М.А.', 540.50, 5);
insert INTO book (book_id, title, author, price, amount) values (3, 'Идиот', 'Достоевский Ф.М.', 460.00, 10);
insert INTO book (book_id, title, author, price, amount) values (4, 'Братья Карамазовы', 'Достоевский Ф.М.', 799.01, 3);
insert INTO book (book_id, title, author, price, amount) values (5, 'Игрок', 'Достоевский Ф.М.', 480.50, 10);
insert INTO book (book_id, title, author, price, amount) values (6, 'Стихотворения и поэмы', 'Есенин С.А.', 650, 15);

////////////////////////////////////////////////////////////

stepik.org ||||stepik.org ||||stepik.org ||||stepik.org ||||stepik.org ||||stepik.org ||||stepik.org ||||stepik.org ||||stepik.org ||||stepik.org ||||stepik.org ||||stepik.org ||||stepik.org ||||stepik.org ||||stepik.org ||||

//////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////

https://stepik.org/lesson/297508/step/7?discussion=3266547&reply=3761770&unit=279268
@Галина_Озерова, 



ROADMAP ВАРИАНТЫ КЕМ МОГУ СТАТЬ

https://towardsdatascience.com/data-science-learning-roadmap-for-2021-84f2ba09a44f



*** Предложение GROUP BY используется для определения групп выходных строк, к которым могут применяться агрегатные функции ( COUNT , MIN , MAX, AVG и SUM ) ***
*** Команда ORDER BY позволяет сортировать записи по определенному полю при выборе из базы данных. См. также команду LIMIT, которая ограничивает количество выбираемых записей. Синтаксис.

/////////////////////ВЕРНОЕ.................
MySQL

CREATE SCHEMA `stepik`;
CREATE TABLE `stepik`.`book` (
  `book_id` INT NOT NULL,
  `title` VARCHAR(45) NULL,
  `author` VARCHAR(45) NULL,
  `price` DECIMAL(6,2) NOT NULL,
  `amount` INT NOT NULL,
  PRIMARY KEY (`book_id`));
USE `stepik`;
insert INTO book (book_id, title, author, price, amount) values (1, 'Мастер и Маргарита', 'Булгаков М.А.', 670.99, 3);
insert INTO book (book_id, title, author, price, amount) values (2, 'Белая гвардия', 'Булгаков М.А.', 540.50, 5);
insert INTO book (book_id, title, author, price, amount) values (3, 'Идиот', 'Достоевский Ф.М.', 460.00, 10);
insert INTO book (book_id, title, author, price, amount) values (4, 'Братья Карамазовы', 'Достоевский Ф.М.', 799.01, 2);
insert INTO book (book_id, title, author, price, amount) values (5, 'Игрок', 'Достоевский Ф.М.', 480.50, 10);
insert INTO book (book_id, title, author, price, amount) values (6, 'Стихотворения и поэмы', 'Есенин С.А.', 650.00, 15);
insert INTO book (book_id, title, author, price, amount) values (7, 'Евгений Онегин', 'Пушкин А.С.', 610.00, 10);







 7       |         |      | 610.00 | 10 

/////////////////////////////////////////////////////////
https://stepik.org/lesson/297509/step/

 1.2.8 

``````````````````````````````````````````````````````````





-- ШАГ 7  
-- ЗАДАНИЕ создание таблицы
CREATE TABLE book(
    -- AUTO_INCREMENT  АВТО_ПРИРОСТ 
    book_id INT PRIMARY KEY AUTO_INCREMENT, 
    title VARCHAR(30)
    autor VARCHAR(30)
    -- DECIMAL(8,2) 8 знаков до ,  2 знака после  + и - и (,) не учитваются
    price DECIMAL(8,2)
    amount INT
);


-- ШАГ 8
/*
ВСТАВКА СТРОКИ
INSERT INTO таблица(поле1, поле2) 
VALUES (значение1, значение2);
*/

-- внести 3 книги
INSERT INTO book (book_id, title, author, price, amount) VALUES (2, 'Белая гвардия', 'Булгаков М.А.', 540.50 , 5), (3, 'Идиот', 'Достоевский Ф.М.' , 460.00 , 10),(4, 'Братья Карамазовы', 'Достоевский Ф.М.', 799.01 , 2); 
SELECT * FROM book;

-- ПЕРЕИМЕНОВАНИЕ ТАБЛИЦ alias ПСЕВДОНИМЫ
SELECT title AS Название, author AS Автор FROM book
-- ВЫЧИСЛЕНИЯ УМНОЖЕНИЯ  вывести в новый столбец 
-- столбец pack содержит арифметические ответы умножения столбца amount
SELECT title, amount, amount * 1.65 AS pack FROM book
/*
1.2 выборка
ШАГ 6
В конце года цену всех книг на складе пересчитывают – снижают ее на 30%. Написать SQL запрос, который из таблицы book выбирает названия, авторов, количества и вычисляет новые цены книг. Столбец с новой ценой назвать new_price, цену округлить до 2-х знаков после запятой.
*/

/////////////////////////////////////////////////////////
https://stepik.org/lesson/297509/step/6?unit=279269

-- 1.2.6
/////////////////////////////////////////////////////////
SELECT title,
       author,
       amount,
       /*
       ROUND(x, k)
    
        округляет значение x до k знаков после запятой,
        если k не указано – x округляется до целого

        ROUND(4.361)=4
        ROUND(5.86592,1)=5.9
        Cтолбец price умножаем на цену-30% = price*0.7 и округляем до 2 значений после запятой
       */
       round ((price*0.7), 2) AS new_price
FROM book;

/////////////////////////////////////////////////////////
https://stepik.org/lesson/297509/step/7?unit=279269

1.2.7 Логические функции IF

``````````````````````````````````````````````````````````
*/
IF(логическое_выражение, выражение_1, выражение_2)
IF(логическое_выражение, Истина выражение_1, Ложь выражение_2)
допускаются вложенные функции в выражение

ПРИМЕР:
Для каждой книги из таблицы book установим скидку следующим образом: если количество книг меньше 4, то скидка будет составлять 50% от цены, в противном случае 30%.

SELECT title, amount, price, 
    IF(amount<4, price*0.5, price*0.7) AS sale
FROM book;


Цена по скидке должна отображаться с двумя знаками после запятой, добавим в запрос округление:

SELECT title, amount, price, 
    ROUND(IF(amount<4, price*0.5, price*0.7),2) AS sale
FROM book;


Усложним вычисление скидки в зависимости от количества книг. Если количество книг меньше 4 – то скидка 50%, меньше 11 – 30%, в остальных случаях – 10%. И еще укажем какая именно скидка на каждую книгу.

Запрос:

SELECT title, amount, price,
    ROUND(IF(amount < 4, price * 0.5, IF(amount < 11, price * 0.7, price * 0.9)), 2) AS sale,
    IF(amount < 4, 'скидка 50%', IF(amount < 11, 'скидка 30%', 'скидка 10%')) AS Ваша_скидка
FROM book;
``````````````````````````````````````````````````````````
ЗАДАНИЕ:
При анализе продаж книг выяснилось, что наибольшей популярностью пользуются книги Михаила Булгакова, на втором месте книги Сергея Есенина. Исходя из этого решили поднять цену книг Булгакова на 10%, а цену книг Есенина - на 5%. Написать запрос, куда включить автора, название книги и новую цену, последний столбец назвать new_price. Значение округлить до двух знаков после запятой.


--- что бы написать код сначало пишем ЕСЛИ Булгаков  то цена выше на 10%. в противном случае ПРАЙС
--- меняем ПРАЙС на конструкцию ЕСЛИ ЕСЕНИН то цена выше на 5%
-- ВСЕ ОКРУГЛЯЕМ ДО ,2 и помещаем в новый столбик
SELECT
    author,
    title,
    ROUND(IF(author = "Булгаков М.А.", price * 1.1, IF(author = "Есенин С.А.", price * 1.05, price)), 2) AS new_price
           FROM book;

/////////////////////////////////////////////////////////
https://stepik.org/lesson/297509/step/8?unit=279269
 
 1.2.8 ОПЕРАТОРЫ СРАВНЕНИЯ больше меньше равно

 SELECT title, price 
FROM book
WHERE price < 600;

``````````````````````````````````````````````````````````
SELECT  author, title, price FROM book WHERE  amount > 10

/////////////////////////////////////////////////////////
https://stepik.org/lesson/297509/step/9?unit=279269
 
 1.2.9 

 Выборка данных, логические операции

 Логическое выражение после ключевого слова WHERE кроме операторов сравнения  и выражений может включать  логические операции (И «and», ИЛИ «or», НЕ «not») и круглые скобки, изменяющие приоритеты выполнения операций.

Приоритеты операций:

    круглые скобки
    умножение  (*),  деление (/)
    сложение  (+), вычитание (-)
    операторы сравнения (=, >, <, >=, <=, <>)
    NOT
    AND
    OR

    Пример

Вывести название, автора и цену тех книг, которые написал Булгаков, ценой больше 600 рублей

Запрос:

SELECT title, author, price 
FROM book
WHERE price > 600 AND author = 'Булгаков М.А.';

Результат:

+--------------------+---------------+--------+
| title              | author        | price  |
+--------------------+---------------+--------+
| Мастер и Маргарита | Булгаков М.А. | 670.99 |
+--------------------+---------------+--------+

 Пример

Вывести название, цену  тех книг, которые написал Булгаков или Есенин, ценой больше 600 рублей

Запрос:

SELECT title, author, price 
FROM book
WHERE (author = 'Булгаков М.А.' OR author = 'Есенин С.А.') AND price > 600;

Результат:

+-----------------------+---------------+--------+
| title                 | author        | price  |
+-----------------------+---------------+--------+
| Мастер и Маргарита    | Булгаков М.А. | 670.99 |
| Стихотворения и поэмы | Есенин С.А.   | 650.00 |
+-----------------------+---------------+--------+

В данном запросе обязательно нужно поставить скобки, так как без них сначала вычисляется  author = 'Есенин С.А.' and price > 600, а потом уже выражение через or. Без скобок были бы отобраны все книги Булгакова и те книги Есенина, цена которых больше 600.

Запрос:

SELECT title, author, price 
FROM book
WHERE author = 'Булгаков М.А.' OR author = 'Есенин С.А.' AND price > 600;

Результат (сравните с предыдущим):

+-----------------------+---------------+--------+
| title                 | author        | price  |
+-----------------------+---------------+--------+
| Мастер и Маргарита    | Булгаков М.А. | 670.99 |
| Белая гвардия         | Булгаков М.А. | 540.50 |
| Стихотворения и поэмы | Есенин С.А.   | 650.00 |
+-----------------------+---------------+--------+
``````````````````````````````````````````````````````````
шаги выполнения как я думал
1
SELECT title, author, price, amount FROM book;
2
SELECT title, author, price, amount FROM book WHERE price < 500 OR price > 600 ;
3
SELECT title, author, price, amount FROM book WHERE price * amount > 5000;
4
SELECT title, author, price, amount FROM book WHERE (price > 600 OR price < 500) AND price * amount > 5000;

/////////////////////////////////////////////////////////
https://stepik.org/lesson/297509/step/10?unit=279269
 
 1.2.10 Выборка данных, операторы BETWEEN, IN

 Логическое выражение после ключевого слова WHERE может включать операторы  BETWEEN и IN. Приоритет  у этих операторов такой же как у операторов сравнения, то есть они выполняются раньше, чем NOT, AND, OR.

Оператор BETWEEN позволяет отобрать данные, относящиеся к некоторому интервалу, включая его границы.

Пример

Выбрать названия и количества тех книг, количество которых от 5 до 14 включительно.

Запрос:

SELECT title, amount 
FROM book
WHERE amount BETWEEN 5 AND 14;

Результат:

+---------------+--------+
| title         | amount |
+---------------+--------+
| Белая гвардия | 5      |
| Идиот         | 10     |
+---------------+--------+

Этот запрос можно реализовать по-другому, результат будет точно такой же.

SELECT title, amount 
FROM book
WHERE amount >= 5 AND amount <=14;

Оператор  IN  позволяет выбрать данные, соответствующие значениям из списка.

Пример

Выбрать названия и цены книг, написанных Булгаковым или Достоевским.

Запрос:

SELECT title, price 
FROM book
WHERE author IN ('Булгаков М.А.', 'Достоевский Ф.М.');

Результат:

+--------------------+--------+
| title              | price  |
+--------------------+--------+
| Мастер и Маргарита | 670.99 |
| Белая гвардия      | 540.50 |
| Идиот              | 460.00 |
| Братья Карамазовы  | 799.01 |
+--------------------+--------+

Этот запрос можно реализовать по-другому, результат будет точно такой же.

SELECT title, price 
FROM book
WHERE author = 'Булгаков М.А.' OR author = 'Достоевский Ф.М.';

``````````````````````````````````````````````````````````


1 нашел количество Оператор IN позволяет выбрать данные, соответствующие значениям из списка.
SELECT title, author FROM book WHERE amount IN(2, 3, 5, 7);
2 нашел цены
SELECT title, author, FROM book WHERE price BETWEEN 540.50 AND 800;
3 объеденяю для выборки
SELECT title, author FROM book WHERE amount IN(2,3,5,7) AND price BETWEEN 540.50 AND 800;
/////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////
https://stepik.org/lesson/297509/step/11?unit=279269

 1.2.11

Выборка данных, оператор LIKE

Оператор LIKE используется для сравнения строк. В отличие от операторов отношения равно (=) и не равно (<>), LIKE позволяет сравнивать строки не на полное совпадение (не совпадение), а в соответствии с шаблоном. Шаблон может включать обычные символы и символы-шаблоны. При сравнении с шаблоном, его обычные символы должны в точности совпадать с символами, указанными в строке. Символы-шаблоны могут совпадать с произвольными элементами символьной строки.
Символ-шаблон   Описание    Пример
%   Любая строка, содержащая ноль или более символов    SELECT * FROM book WHERE author LIKE '%М.%'
выполняет поиск и выдает все книги, инициалы авторов которых содержат «М.»
_ (подчеркивание)   Любой одиночный символ  SELECT * FROM book WHERE title LIKE 'Поэм_'
выполняет поиск и выдает все книги, названия которых либо «Поэма», либо «Поэмы» и пр.

Пример 1

Вывести названия книг, начинающихся с буквы «Б».

Запрос:

SELECT title 
FROM book
WHERE title LIKE 'Б%';
/* эквивалентное условие 
title LIKE 'б%'
*/

Результат:

+-------------------+
| title             |
+-------------------+
| Белая гвардия     |
| Братья Карамазовы |
+-------------------+

Пояснение
Строчные и прописные буквы в строках эквивалентны.

Пример 2

Вывести название книг, состоящих ровно из 5 букв.

Запрос:

SELECT title FROM book 
WHERE title LIKE "_____"

Результат:

+-------+
| title | 
+-------+
| Идиот |
+-------+

Пояснение
Для обозначения одного любого символа используется  "_", следовательно для обозначения 5 символов используется 5 подряд символов подчеркивания.

Пример 3

Вывести книги, название которых длиннее 5 символов:

Запрос:

SELECT title FROM book 
WHERE title LIKE "______%";
/* эквивалентные условия 
title LIKE "%______"
title LIKE "%______%"
*/

Результат:

+-----------------------+
| title                 |
+-----------------------+
| Мастер и Маргарита    |
| Белая гвардия         |
| Братья Карамазовы     |
| Стихотворения и поэмы |
| Дети полуночи         |
| Лирика                |
+-----------------------+

Пояснение  

Пример 4

Вывести названия книг, которые содержат букву "и" как отдельное слово, если считать, что слова в названии отделяются друг от друга пробелами и не содержат знаков препинания.

 Запрос:

SELECT title FROM book 
WHERE   title LIKE "_% и _%" /*отбирает слово И внутри названия */
    OR title LIKE "и _%" /*отбирает слово И в начале названия */
    OR title LIKE "_% и" /*отбирает слово И в конце названия */
    OR title LIKE "и" /* отбирает название, состоящее из одного слова И */

Результат:

+-----------------------+
| title                 |
+-----------------------+
| Мастер и Маргарита    |
| Стихотворения и поэмы |
+-----------------------+

Пояснение

Пример 5

Вывести названия книг, которые состоят ровно из одного слова, если считать, что слова в названии отделяются друг от друга пробелами .

 Запрос:

SELECT title FROM book 
WHERE title NOT LIKE "% %";    

Результат:

+-------+
| title |
+-------+
| Идиот |
+-------+

Пояснение
Отсутствие пробела в названии означает, что оно состоит из одного слова. Чтобы это проверить используется оператор , который в данном случае отберет все названия, в которых нет пробелов.
Задание

Вывести название и автора тех книг, название которых состоит из двух и более слов, а инициалы автора содержат букву «С». Считать, что в названии слова отделяются друг от друга пробелами и не содержат знаков препинания, между фамилией автора и инициалами обязателен пробел, инициалы записываются без пробела в формате: буква, точка, буква, точка.

Результат:

+-----------------------+-------------+
| title                 | author      |
+-----------------------+-------------+
| Стихотворения и поэмы | Есенин С.А. |
+-----------------------+-------------+

Пояснение.

    При записи условия, необходимо учесть, что слово в названии обязательно должно содержать  хотя бы один символ.
    Инициалы в этом задании - это первая буква имени или отчества, после которой стоит точка.
    Буква C должна быть написана в РУССКОЙ раскладке. Если не проходит решение - проверьте это.

Важно! Только для этого шага в таблицу добавлены новые записи.
Структура и наполнение таблицы book:
Введите SQL запрос  

``````````````````````````````````````````````````````````


SELECT title, author FROM book WHERE title LIKE "С_%" AND author LIKE "С_%" ;

SELECT title, author FROM book WHERE author LIKE "_% %С._.%";
ИЗ ОДНОГО СЛОВА
SELECT title, author FROM book WHERE title NOT LIKE "% %";
ИЗ НЕСКОЛЬКИХ СЛОВ
SELECT title, author FROM book WHERE title LIKE "% %" AND author LIKE "С_%";  

SELECT title, author FROM book WHERE title LIKE "% %" AND author LIKE "% %С_%"; 

SELECT title, author FROM book WHERE author LIKE "_% С_%";

SELECT title, author FROM book WHERE title LIKE "%% %%" AND author LIKE "_% С_%";

SELECT title, author FROM book WHERE trim(title) LIKE "%% %%" AND author LIKE "_% С.%" AND title IS NOT NULL;

SELECT title, author FROM book WHERE trim(title) LIKE "%% %%" AND author LIKE "_% С.%";
SELECT title, author FROM book WHERE title LIKE "%% %%" AND author LIKE "_% С.%" AND NOT title ="";

РЕГУЛЯРНЫЕ ВЫРАЖЕНИЯ
SELECT DISTINCT city FROM station WHERE city REGEXP "^[aeiou].*";
-- запросить слова начинающиеся на гласные БЕЗ ИСПОЛЬЗОВАНИЯ GREP выражения
SELECT DISTINCT city FROM station WHERE city RLIKE '^[aeiou]';


LIKE "_% и _%" /*отбирает слово И внутри названия */
    OR title LIKE "и _%" /*отбирает слово И в начале названия */
    OR title LIKE "_% и" /*отбирает слово И в конце названия */
    OR title LIKE "и" /* отбирает название, состоящее из одного слова И */


https://stepik.org/lesson/297508/step/7?discussion=3266547&reply=3761770&unit=279268
@Галина_Озерова, 

/////////////////////////////////////////////////////////
https://stepik.org/lesson/297509/step/12?unit=279269
 1.2.12 Выборка данных с сортировкой

При выборке можно указывать столбец или несколько столбцов, по которым необходимо отсортировать отобранные строки. Для этого используются ключевые слова ORDER BY, после которых задаются имена столбцов. При этом строки сортируются по первому столбцу, если указан второй столбец, сортировка осуществляется только для тех строк, у которых значения первого столбца одинаковы. По умолчанию ORDER BY выполняет сортировку по возрастанию. Чтобы управлять направлением сортировки вручную, после имени столбца указывается ключевое слово ASC (по возрастанию) или DESC (по убыванию). 

Логический порядок операций для запроса SQL следующий:

    FROM
    WHERE
    SELECT
    ORDER BY

Поскольку сортировка выполняется позже SELECT, для указания столбцов, по которым выполняется сортировка, можно использовать имена, присвоенные им после SELECT, а также порядковый номер столбца в перечислении.

``````````````````````````````````````````````````````````

1
SELECT author, title, amount FROM book WHERE amount BETWEEN 2 and 14
   2 
    SELECT author, title, amount FROM book WHERE amount BETWEEN 2 and 14 ORDER BY author DESC;
        3
        SELECT author, title, amount FROM book WHERE amount BETWEEN 2 and 14 ORDER BY author DESC, title ASC;
            4 -- убрал amount что бы не мешало по заданию оно не нужно ))
            SELECT author, title FROM book WHERE amount BETWEEN 2 and 14 ORDER BY author DESC, title ASC;


SELECT author, title, amount FROM book WHERE title LIKE "%% %%" AND amount BETWEEN 3 and 14 ORDER BY author DESC, title ASC, GROUP BY autor HAVING COUNT (*) >= 2;


GROUP BY author HAVING COUNT (*) >= 2
SELECT author, title, amount FROM book WHERE title LIKE "%Е%" OR "%о%" OR "%и%" OR "%% %%" AND amount BETWEEN 1 AND 16 ORDER BY author DESC, title ASC;



/////////////////////////////////////////////////////////
https://stepik.org/lesson/297509/step/

 1.3.3 Выборка данных, групповые функции SUM и COUNT

При группировке над элементами столбца, входящими в группу можно выполнить различные действия, например, просуммировать их или найти количество элементов в группе.

При группировке данных таблицыbook по столбцу author,  получается три группы. В первую группу входят две строки, в поле author которых стоит значение «Булгаков М.А.». В столбце amountк этой группе относится значения 3 и 5.  Просуммировав эти значения, можно узнать общее количество книг Булгакова на складе. Для этого используется групповая функция SUM(). В скобках указывается столбец, по которому осуществляется суммирование.

Пример

Посчитать, сколько экземпляров книг каждого автора хранится на складе.

Запрос:

SELECT author, SUM(amount)
FROM book
GROUP BY author;

Результат:

+------------------+-------------+
| author           | SUM(amount) |
+------------------+-------------+
| Булгаков М.А.    | 8           |
| Достоевский Ф.М. | 23          |
| Есенин С.А.      | 15          |
+------------------+-------------+

Примечание

Из таблицы с результатами запроса видно, что функцию COUNT()  можно применять к любому столбцу, в том числе можно использовать и *, если таблица не содержит пустых значений. Если же в столбцах есть значения Null, (для группы по автору Есенин в нашем примере), то

    COUNT(*) —  подсчитывает  все записи, относящиеся к группе, в том числе и со значением NULL;
    COUNT(имя_столбца) — возвращает количество записей конкретного столбца (только NOT NULL), относящихся к группе.

``````````````````````````````````````````````````````````


SELECT  author AS Автор,
    COUNT(DISTINCT title) AS Различных_книг,  --- как вариант но и без ДИСТИНКТ работает
    SUM(amount) AS Количество_экземпляров
    FROM book
    GROUP BY author;

SELECT  author AS Автор,
    COUNT(title) AS Различных_книг,
    SUM(amount) AS Количество_экземпляров
    FROM book
    GROUP BY author;



    SELECT author AS Автор, COUNT(DISTINCT title) AS Различных_книг, --- как вариант но и без ДИСТИНКТ работает
 SUM(amount) AS Количество_экземпляров
FROM book
GROUP BY author;


SELECT author AS Автор, COUNT(title) AS Различных_книг,
                                                 SUM(amount) AS Количество_экземпляров
FROM book
GROUP BY author;


    /////////////////////////////////////////////////////////
https://stepik.org/lesson/297515/step/4?unit=279275

 1.3.4 Выборка данных, групповые функции MIN, MAX и AVG

К групповым функциям SQL относятся: MIN(), MAX() и AVG(), которые вычисляют минимальное, максимальное и среднее значение элементов столбца, относящихся к группе.

Пример

Вывести минимальную цену книги каждого автора

Запрос:

SELECT author, MIN(price) AS min_price
FROM book
GROUP BY author;

Результат:

+------------------+-----------+
| author           | min_price |
+------------------+-----------+
| Булгаков М.А.    | 540.50    |
| Достоевский Ф.М. | 460.00    |
| Есенин С.А.      | 650.00    |
+------------------+-----------+

Задание


``````````````````````````````````````````````````````````

Вывести минимальную, максимальную и среднюю цену книг каждого автора . Вычисляемые столбцы назвать Минимальная_цена, Максимальная_цена и Средняя_цена соответственно.

SELECT  author, -- AS Автор, -- АВТОРА РЕШИЛИ ОСТАВИТЬ НА АНГЛИЙССКОМ
    MIN(price) AS Минимальная_цена,
    MAX(price) AS Максимальная_цена,
    AVG(price) AS Средняя_цена
    FROM book
    GROUP BY author;

    SELECT author, -- AS Автор, -- АВТОРА РЕШИЛИ ОСТАВИТЬ НА АНГЛИЙССКОМ
 MIN(price) AS Минимальная_цена,
                          MAX(price) AS Максимальная_цена,
                                                    AVG(price) AS Средняя_цена
FROM book
GROUP BY author;



/////////////////////////////////////////////////////////
https://stepik.org/lesson/297515/step/5?unit=279275

 1.3.5  Выборка данных c вычислением, групповые функции

В качестве аргумента групповых функций  SQL может использоваться не только столбец, но и любое допустимое в SQL арифметическое выражение.

Пример

Вывести суммарную стоимость книг каждого автора.

Запрос:

SELECT author, SUM(price * amount) AS Стоимость
FROM book
GROUP BY author;

Результат:

+------------------+-----------+
| author           | Стоимость |
+------------------+-----------+
| Булгаков М.А.    | 4715.47   |
| Достоевский Ф.М. | 11802.03  |
| Есенин С.А.      | 9750.00   |
+------------------+-----------+

Групповые функции могут быть элементами выражений. Например, при вычислении средней стоимости книг каждого автора на предыдущем шаге получились значения с шестью знаками после запятой. А поскольку это деньги, значения нужно округлить до 2 знаков после запятой.

 Пример

Найти среднюю цену книг каждого автора.

Запрос:

SELECT author, ROUND(AVG(price),2) AS Средняя_цена
FROM book
GROUP BY author;


``````````````````````````````````````````````````````````
1 СУММАРНАЯ СТОИМОСТЬ
SELECT author, 
SUM(price * amount) AS Стоимость, 
FROM book
GROUP BY author;

2 СТОИМОСТЬ С НДС БЕЗ НДС ОДНОЙ КНИГИ
ROUND((price * 18/100)/(1+18/100), 2) AS tax, -- НДС 
ROUND(price  /(1+18/100), 2) AS price_tax -- БЕЗ НДС

3 СУММАРНАЯ СТОИМОСТЬ ВСЕХ КНИГ
-- в столбике НДС и стомимость без НДС сначало узнали сумму SUM(price * amount)  потом СЧИТАЛИ  стандартно
    ROUND((sum(price * amount) * 18/100)/(1+18/100), 2) AS tax, -- НДС 
    ROUND(sum(price * amount)  /(1+18/100), 2) AS price_tax -- БЕЗ НДС




SELECT author, 
SUM(price * amount) AS Стоимость, 
-- в столбике НДС и стомимость без НДС сначало узнали сумму SUM(price * amount)  потом СЧИТАЛИ  стандартно
    ROUND((SUM(price * amount) * 18/100)/(1+18/100), 2) AS НДС, 
    ROUND(SUM(price * amount)  /(1+18/100), 2) AS Стоимость_без_НДС 
FROM book
GROUP BY author;



SELECT
MIN(price) AS Минимальная_цена, 
MAX(price) AS Максимальная_цена,
ROUND(AVG(price),2) AS Средняя_цена  -- ОКРУГЛЕНИЕ ЦЕНЫ
FROM book;

SELECT MIN(price) AS Минимальная_цена,
                                MAX(price) AS Максимальная_цена,
                                                          ROUND(AVG(price), 2) AS Средняя_цена -- ОКРУГЛЕНИЕ ЦЕНЫ
FROM book;


1 Вычислить среднюю цену
SELECT
ROUND(AVG(price), 2) AS Средняя_цена
FROM book;

2 вычислить диапазон
FROM book  WHERE price HAVING amount >= 5 AND amount <=14

3 НЕ РАБОТАЕТ В ЗАДАЧЕ
SELECT
ROUND(AVG(price), 2) AS Средняя_цена
FROM book  WHERE price HAVING amount >= 5 AND amount <=14

4 -- ВЫЧИСЛИТЬ СРЕДНЮЮ с округлением до 2   И СУММАРНУЮ СТОИМОСТЬ В ДИАПАЗОНЕ
select round(avg(price),2) as Средняя_цена, round(sum(price*amount),2) as Стоимость
from book
where amount between 4 and 14;


=====================================================================
Мб кому будет наглядно и полезно. Последовательность выполнения операций на сервере:

MySQL: FROM => WHERE = SELECT = GROUP BY = HAVING = ORDER BY = LIMIT.   

PostgreSQL: FROM => WHERE = GROUP BY = HAVING = SELECT = DISTINCT = ORDER BY = LIMIT.

Поэтому мы смогли использовать Стоимость и в HAVING и в ORDER BY . В PostgreSQL мы такое не сможем провернуть в HAVING .
======================================================================

/////////////////////////////////////////////////////////
https://stepik.org/lesson/297515/step/8?unit=279275

 1.3.8 Выборка данных по условию, групповые функции, WHERE и HAVING

Для этого урока теоретическая часть подготовлена Alexandra Klinnikova, спасибо большое!

WHERE и HAVING могут использоваться в одном запросе. При этом необходимо учитывать порядок выполнения  SQL запроса на выборку на СЕРВЕРЕ:

================= ПОСЛЕДОВАТЕЛЬНОСТЬ ДЕЙСТВИЙ
1. FROM   >>>> 
2. WHERE  >>>>
3. GROUP BY  >>>>
4. HAVING  >>>>
5. SELECT  >>>>
6. ORDER BY  >>>>

1. FROM   >>>>  2. WHERE  >>>>  3. GROUP BY  >>>>  4. HAVING  >>>>  5. SELECT  >>>>  6. ORDER BY  >>>>  


Сначала определяется таблица, из которой выбираются данные (FROM), затем из этой таблицы отбираются записи в соответствии с условием  WHERE, выбранные данные агрегируются (GROUP BY),  из агрегированных записей выбираются те, которые удовлетворяют условию после HAVING. Потом формируются данные результирующей выборки, как это указано после SELECT ( вычисляются выражения, присваиваются имена и пр. ). Результирующая выборка сортируется, как указано после ORDER BY.

Важно! Порядок ВЫПОЛНЕНИЯ запросов - это не порядок ЗАПИСИ ключевых слов в запросе на выборку. Порядок записи (синтаксис запроса) остается таким же, как рассматривался ранее в курсе. Порядок ВЫПОЛНЕНИЯ  нужен для того, чтобы понять, почему, например, в WHERE нельзя использовать имена выражений из SELECT. Просто SELECT выполняется компилятором позже, чем WHERE, поэтому ему неизвестно, какое там выражение написано.

Пример

Вывести максимальную и минимальную цену книг каждого автора, кроме Есенина, количество экземпляров книг которого больше 10. 

SELECT author,
    MIN(price) AS Минимальная_цена,
    MAX(price) AS Максимальная_цена
FROM book
WHERE author <> 'Есенин С.А.'
GROUP BY author
HAVING SUM(amount) > 10;

Результат:

+------------------+------------------+-------------------+
| author           | Минимальная_цена | Максимальная_цена |
+------------------+------------------+-------------------+
| Достоевский Ф.М. | 460.00           | 799.01            |
+------------------+------------------+-------------------+

 Этот запрос будет работать, если его переписать следующим образом:

SELECT author,
    MIN(price) AS Минимальная_цена,
    MAX(price) AS Максимальная_цена
FROM book
GROUP BY author
HAVING SUM(amount) > 10 AND author <> 'Есенин С.А.';

Не смотря на то что результат будет одинаковым, так делать не рекомендуется. «Потому что как написано - запрос сначала выбирает всех авторов, потом выводит данные, рассчитывая минимальное и максимальное значение цены для каждого, и только после всего убирает Есенина. Можно убрать Есенина в данном случае раньше и не использовать ресурсы базы для расчета его минимального и максимального значения, как это сделано в первом варианте. На небольшой базе быстродействия не ощутить, но если выполнять такое на продуктивной, то второй вариант значительно проигрывает...»[Alexandra Klinnikova].

``````````````````````````````````````````````````````````


SELECT author,
-- считает сумму создает столбик стоимость
    sum(price * amount) AS Стоимость 
    FROM book
    -- исключает по списку
WHERE title NOT IN('Идиот', 'Белая гвардия')
GROUP BY author
-- считает сумму книг находит где сумма выше  5000
HAVING SUM(price * amount) > 5000
-- считает сумму книг фильтрует в обратном порядке
ORDER BY SUM(price * amount) DESC;




вложенные запросы

SELECT author, title, price
FROM book
Where
Price <= (select avg(price) from book)
order by PRICE desc;




-- 1 узнаем минимальную цену книги  460 
SELECT author, title, MIN(price)
-- 2 к цене прибавляем мин(цена)+150
(SELECT MIN(price)+150 FROM book)
-- 3 сравнеиваем
price <= ()
-- Куда тут вставлять ABS



SELECT author, title, price 
FROM book
WHERE price <= (SELECT MIN(price) FROM book)+150 
ORDER BY price asc;

ВЛОЖЕННАЯ функция

SELECT author, title, amount
FROM book
-- сравнение с вложенной функцией выводит только те строчки которые есть в обоих таблицах
WHERE amount IN (
        SELECT amount 
        FROM book 
        GROUP BY amount
        -- оставляет записи которые не повторяются больше одного раза
        HAVING COUNT(amount) = 1
      );


выборка с подзапросом all

Вывести информацию о книгах(автор, название, цена), цена которых меньше самой большой из минимальных цен, вычисленных для каждого автора.


SELECT author, title, price
FROM book
WHERE price < ALL (
        SELECT MAX(price) 
        FROM book 
        GROUP BY author 
      );
      

      SELECT author, title, price
FROM book
WHERE price < ANY (
        SELECT AVG(price) 
        FROM book 
        GROUP BY author 
      );


      SELECT author, title, price
FROM book
WHERE price < ANY (
        SELECT MIN(price) 
        FROM book 
        GROUP BY author 
      );




SELECT title, author, amount
FROM book
WHERE ((SELECT (MAX(amount) FROM book ) - amount))
            GROUP BY author
            );



1
SELECT title, author, amount
FROM book
-- исключение
WHERE (SELECT MAX(amount)FROM book)-amount 



/////////////////////////////////

1.5.4 Добавить из таблицы supply в таблицу book, все книги, кроме книг, написанных Булгаковым М.А. и Достоевским Ф.М.

-- внедрил в бук таблицу
INSERT INTO book (title, author, price, amount) 
-- таблица сапли
SELECT title, author, price, amount FROM supply
-- исключил список перечисление
WHERE author NOT IN("Достоевский Ф.М.", "Булгаков М.А.");
SELECT * FROM book;





1.5.5

Пример

Занести из таблицы supply в таблицу book только те книги, названия которых отсутствуют в таблице book.

Запрос:

INSERT INTO book (title, author, price, amount) 
SELECT title, author, price, amount 
FROM supply
WHERE title NOT IN (
        SELECT title 
        FROM book
      );

SELECT * FROM book;


-- Занести из таблицы supply в таблицу book только те книги, авторов которых нет в  book.

INSERT INTO book (title, author, price, amount) 
SELECT title, author, price, amount 
FROM supply
WHERE author NOT IN (
        SELECT author 
        FROM book
      );
SELECT * FROM book;

1.5.6
Под обновлением данных подразумевается изменение значений в существующих записях таблицы. При этом возможно как изменение значений полей в группе строк (даже всех строк таблицы), так и правка значения поля отдельной строки.
Изменение записей в таблице реализуется с помощью запроса UPDATE. Простейший запрос на  обновление выглядит так:
UPDATE таблица SET поле = выражение   


Уменьшить на 10% цену тех книг в таблице book, количество которых принадлежит интервалу от 5 до 10 включительно.
UPDATE ВНОСИТ новые значения в таблицу

UPDATE book 
SET price = 0.9 * price 
WHERE amount BETWEEN 5 AND 10;

SELECT * FROM book;



stepik.org ||||stepik.org ||||stepik.org ||||stepik.org ||||stepik.org ||||stepik.org ||||stepik.org ||||stepik.org ||||stepik.org ||||stepik.org ||||stepik.org ||||stepik.org ||||stepik.org ||||
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////PYTHON/PYTHON/PYTHON/PYTHON/PYTHON/PYTHON/PYTHON


ВЫБОРКА ВЫЧИСЛЯЕМЫХ ДАННЫХ
-- ФУНКИЯ

CEILING(x)

-- ОПИСАНИЕ:

возвращает наименьшее целое число, большее или равное x
(округляет до целого числа в большую сторону)

-- ПРИМЕР:

CEILING(4.2)=5
CEILING(-5.8)=-5

------------------------


-- ФУНКИЯ

ROUND(x, k)

-- ОПИСАНИЕ:

округляет значение x до k знаков после запятой,
если k не указано – x округляется до целого

-- ПРИМЕР:



------------------------


-- ФУНКИЯ

-- ОПИСАНИЕ:

-- ПРИМЕР:



------------------------


-- ФУНКИЯ

-- ОПИСАНИЕ:

-- ПРИМЕР:



------------------------


-- ФУНКИЯ

-- ОПИСАНИЕ:

-- ПРИМЕР:



------------------------


-- ФУНКИЯ

-- ОПИСАНИЕ:

-- ПРИМЕР:



------------------------


-- ФУНКИЯ

-- ОПИСАНИЕ:

-- ПРИМЕР:

||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
||||||||||||||||||||||||||||||||| SUDO LINUX |||||||||||||||||||||||||||||||||||||||||||||||||||
||||||||||||||||||||||||||||||||| SUDO LINUX |||||||||||||||||||||||||||||||||||||||||||||||||||
||||||||||||||||||||||||||||||||| SUDO LINUX |||||||||||||||||||||||||||||||||||||||||||||||||||
||||||||||||||||||||||||||||||||| SUDO LINUX |||||||||||||||||||||||||||||||||||||||||||||||||||
||||||||||||||||||||||||||||||||| SUDO LINUX |||||||||||||||||||||||||||||||||||||||||||||||||||
||||||||||||||||||||||||||||||||| SUDO LINUX |||||||||||||||||||||||||||||||||||||||||||||||||||
||||||||||||||||||||||||||||||||| SUDO LINUX |||||||||||||||||||||||||||||||||||||||||||||||||||
||||||||||||||||||||||||||||||||| SUDO LINUX |||||||||||||||||||||||||||||||||||||||||||||||||||
||||||||||||||||||||||||||||||||| SUDO LINUX |||||||||||||||||||||||||||||||||||||||||||||||||||
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

подключение диска

\\DESKTOP-NG99VTC\Objects
smb://DESKTOP-NG99VTC/Objects


dc+++
sudo apt install eiskaltdcpp

Linux DC++
4
Клиент сети Direct Connect

////////////////GIT/////////////

sudo apt-get install git
#Go to needle directory!

git --version

git --help

linux ubuntu
ls (аналог dir)
cd /home/misha/Dropbox
pwd текущий католог
cd ..
cd ~ (перейти в домашнюю папку)
cal date

копирование файлов
cp file1 file2
копирование директории(папки)
cp -r dir1 dir2

перемещение файла или переименнование файла
mv file1 file2

cоздание дирректорий
mkdir dir1

удаление файла
rm files

удаление директори
rm -r dir

комманда кат выводит наэкран содержимое файла (превью) с нумерацией строк
cat -n txt.txt

выводит строки в обратном порядке
tac -n txt.txt


Команды head и tail

Если нужно открыть в терминале Linux большой файл, то вместо команды «cat» можно использовать «head» или «tail». 
Данные команды выводят в терминал только часть файла. В случае «head» выводится только начало документа, а в случае «tail» только конец.

Чтобы открыть файл с помощью данной команды просто введите «head» или «tail» и название файла:

head file_name.txt

tail file_name.txt


По умолчанию команды «head» и «tail» выводят по 10 строк с начала или конца файла. Но, при необходимости это значение можно изменить при помощи параметра «-n».
 Для этого вводим «-n» и число строк (не отделяя пробелом). Выглядит это примерно так:

head -n3 file_name.txt

tail -n5 file_name.txt


Команды more и less

Для открытия больших файлов в терминале Linux можно использовать команды «more» и «less». Команда «more» открывает файл в терминале Linux и позволяет пролистывать его только вниз при помощи клавиш Enter (одна строка вниз) и Space (страница вниз). Пролистывания вверх нет, поэтому, если вы случайно проскочили нужное вам место в файле, то вернуться назад не получится.

Чтобы открыть файл в терминале Linux с помощью команды «more» и «less» нужно ввести следующее:

more file_name.txt

less file_name.txt

команда more

пути
абсолютный от корневого диска
/asdf/asdf

показать скрытые файлы перед файлом будет стоять точка
.скрытый файл
ls -a

что бы получить справку по любой комманде
man комманда
man ls

история комманд 
history

что бы ввести комманду из истории надо
!123
указать номер комманды   
Если нажать ^+R откроется интерактивное приглашение коммандой строки

ДОСРОЧНОЕ ПРЕРЫВАНИЕ комманды ^+C


git init 
git add .
git commit -m 'comment to commit'
git remote add origin https://github.com/ivansamofal/test.git

git status

git config --global user.name "Ivan"
git config --global user.email "ivansamofal@gmail.com"


git config --global push.default simple
git push

git checkout 
git branch
git stash

/////////////////////


файрвол 
sudo apt install gufw
ДОБАВИТЬ в автозагрузку
sudo gufw enable  -

ping ya.ru



https://habr.com/ru/post/131504/
контроль трафика 
apt-get install iptraf

аналог iptraf
sudo apt install wireshark


sudo apt --fix-broken install



консольный браузер
sudo apt install elinks


как сделать firefox консольным текстовым браузером
В Firefox картинки можно отключить через about:config – копируйте этот системный адрес в строку браузера. На входе необходимо подтвердить, что понимаем риск, нажав кнопку «Я обещаю, что буду осторожен». Здесь находим строку permissions.default.image или копируем название и вставляем в поиск по окну. Двойным щелчком мышки по строке открываем ее значение, меняем «1» на «2».

about:config

permissions.default.image
меняем «1» на «2»

////////////////////////////если надо установить программы из какой то папки/////////////////////////////////

d ~/Путь/папка/
sudo dpkg -i *.deb








///////////////////////////обновить репозиторий//////////////////////////////////


````````````````````````````````
sudo apt update&sudo apt upgrade

````````````````````````````````



top kill
ps axu | grep gcalctool  


$ pidof gcalctool
25609

///////////////////////////УСТАНОВКА ПРОГРАММ СПИСКОМ//////////////////////////////////

sudo apt install obs-studio flameshot vlc nemo steam gparted synaptic doublecmd-gtk samba smbclient ffmpeg mc

sudo apt install anki

/////////////////////////
sudo apt-get install nano

Для управления текстовым редактором Nano используются следующие комбинации клавиш:

    Ctrl-G или F1 – просмотр справки;
    Ctrl-X или F2 – выход из программы;
    Ctrl-O или F3 – сохранение открытого файла;
    Ctrl-J или F4 – выровнять текущий абзац;
    Ctrl-R или F5 – загрузить содержимое другого файла в текущий;
    Ctrl-W или F6 – выполнить поиск;
    Ctrl-Y или F7 – пролистать страницу вперед;
    Ctrl-V или F8 – пролистать страницу назад;
    Ctrl-K или F9 – вырезать строку и запомнить;
    Ctrl-U или F10 – вставить;
    Ctrl-C или F11 – положение курсора;
    Ctrl-T или F12 – проверить орфографию;
/////////////////////////


-----------УСТАНОВКА ПРОГРАММ--------
sudo apt install
  gdebi
  gimp
  krita
  kdenlive
  audacity
  obs-studio
  gnome-tweak-tool
  papirus-icon-theme 
  flameshot
  okular
  clementine
  vlc
  nemo
  steam
  doublecmd-gtk
  gparted 
  timeshift
  synaptic
  
  ----------------------------------


https://habr.com/ru/post/106165/
5. Поддержка некоторых популярных вещей, в том числе mp3, не включена в состав системы по умолчанию из-за того, что они ограничены патентами и не соответствуют правилам open source. Это решается установкой одного пакета ubuntu-restricted-extras.

sudo apt install ubuntu-restricted-extras

https://launchpad.net/ubuntu/+source/ubuntu-restricted-extras, отыскиваем систему The Bionic Beaver (current stable release). Да, номеров здесь нет, так что ищем по названию.


//////////////////////////подключится к другому компьютеру///////////////////////////////////

# ДОБАВИЛ В ОБЩИЙ СПИСОК  ВЫШЕ
sudo apt install samba smbclient


структура ФАЙЛОВОЙ СИСТЕМЫ к прочтению
https://losst.ru/ctruktura-fajlovoj-sistemy-linux




///////////////////////////////SNAP//////////////////////////////
-- читалка книг
sudo snap install foliate
--backup
sudo apt-get install timeshift
-- authy
sudo snap install authy --beta
-- telegram
sudo snap install telegram-desktop


--------- для игр ------
sudo apt-get install playonlinux

лига легенд
league 
sudo apt update 
sudo apt install snapd
sudo snap install lwagueoflegends --edge
sudo snap install lwagueoflegends --edge --devmode






////////////////////////ПОИСК И УСТАНОВКА ПРОГРАММЫ ЧЕРЕЗ СПАН ПРИМЕР/////////////////////////////////////

---------------------ПОИСК И УСТАНОВКА ПРОГРАММЫ ЧЕРЕЗ СПАН ПРИМЕР -------
snap find netbeans
sudo snap install netbeans --classic ВЫБИРАЕМ ОПЦИЮ








//////////////////////////исправление времени винды///////////////////////////////////
------- исправление времени винды -------------
timedatectl set-local-rtc 1 --adjust-system-clock
------- исправление времени винды -------------
/////////////////////////////////////////////////////////////










////////////////////////сли возникает ошибка с установкой sublime/////////////////////////////////////

Ошибка GPG: https://download.sublimetext.com apt/dev/ InRelease: Следующие подписи не могут быть проверены, так как недоступен открытый ключ: NO_PUBKEY F57D4F59BD3DF454

sudo apt-key adv --recv-keys --keyserver keyserver.ubuntu.com СЮДА ПИШИ КЛЮЧ

----------если возникает ошибка с установкой sublime-------------


--------------- ПЛАГИНЫ САБЛАЙМ -----------------
sublime
bs16color
-- находит и подсвечивает синтактические ошибки
Sublime​Linter 
--------------- ПЛАГИНЫ САБЛАЙМ -----------------








/// SQL /// SQL /// SQL /// SQL /// SQL /// SQL /// SQL /// SQL /// SQL /// SQL /// SQL /// SQL /// SQL /// SQL 



sudo apt install mysql-server
sudo apt install mysql-client



-- test
sudo mysql
show databases; 
exit
-- test
sudo snap search mysql --search


загружаем ВОРКБЕНЧ
wget ......

sudo mysql_secure_installation

////////////////////////////////////////////////список вопросов/////////////////////////////////
Press y|Y for Yes, any other key for No: no

Do you wish to continue with the password provided?(Press y|Y for Yes, any other key for No) : NO

Remove anonymous users? (Press y|Y for Yes, any other key for No) : yes
Success.

Disallow root login remotely? (Press y|Y for Yes, any other key for No) : NO

Remove test database and access to it? (Press y|Y for Yes, any other key for No) : no

Reload privilege tables now? (Press y|Y for Yes, any other key for No) : yes

All done! 

////////////////////////////////////////////////список вопросов/////////////////////////////////

sudo apt update

в папке где лежит  воркбенч нажать открыть в терминале правой кнопокой
набрать 
ls
скопировать архив

sudo apt install ~/home/mike215misha/Загрузки/mysql-workbench-community-dbgsym_8.0.25-1ubuntu20.04_amd64.deb



////////
sudo dpkg -i ~/home/mike215misha/Загрузки/mysql-workbench-community_8.0.25-1ubuntu20.04_amd64.deb
    
возникла проблема зависимости надо  установить программу

sudo apt-get install gnome-menus

Исправление зависимостей…
sudo apt --fix-broken install


sudo apt update&sudo apt upgrade
перезагрузка компа
https://www.youtube.com/watch?v=WB4VKkMxi94
4:42

узнать версию своей ubuntu
lsb_release -a
uname -a
lscpu
устанавливаем синоптик потом ищем у них то что надо
sudo apt install synaptic
sudo snap search mysql-workbench-community
sudo snap install mysql-workbench-community


ALTER USER 'root'@'localhost' IDINTIFIED WITH mysql_native_password BY '12345678'
ALTER USER 'mike215misha'@'127.0.0.1:3306' IDINTIFIED WITH mysql_native_password BY '12345678'
можно указать пользователя и пароль


выставляем привелегии
FLUSH PRIVILEGES; 
exit;



sqlcmd -S <SQLInstanceName>-U <UserName> -P <Password>

sqlcmd -S -U -P

 
ls -- покажет где лежит дебиан файл
копируем название файла
sudo apt install --вставляем из буфера название файла


/////////////////////сброс рута и пароля////////////

останавливаем db
sudo systemctl stop mysql

Перезапускаем сервер базы данных в режиме –skip-grant-tables

sudo systemctl set-environment MYSQLD_OPTS="--skip-grant-tables --skip-networking"


запускаем базу
sudo systemctl edit mysql


в открытый файл вносим строки
[Service]
ExecStart=
ExecStart=/usr/sbin/mysqld --skip-grant-tables --skip-networking

Нажимаем CTRL-X, чтобы выйти из файла, затем – Y, чтобы сохранить внесенные изменения.   Перезагружаем systemd, чтобы перечитать изменения:

зупускаем сервер
sudo systemctl start mysql


и подключаемся пользователем root:

sudo mysql -u root

сброс привелегий 

FLUSH PRIVILEGES;
ALTER USER 'root'@'localhost' IDENTIFIED BY 'new_password';










/////////////////////////////////////////БЕТТА ВЕРСИЯ НА РАЗБОР//////////////////////////////////////////////////////////////////////
MySQL консоль MySQL консоль MySQL консоль MySQL консоль MySQL консоль MySQL консоль MySQL консоль MySQL консоль 
#
/* ВМЕСТО юРутт пПасс пишем свое первые маленькие буквы оставляем как есть */
mysql.exe -uROOT -pPASS
#
//////// РАБОТА С ЮЗЕРОМ \\\\\\\\\\
#
/* зашел в основную базу */
USE mysql; 
#
/*покажет пользователя */
SELECT USEr, host FROM USEr;
#
/* пользователь на локалхосте если надо определенный хост надо его знать */
CREATE USEr 'noon-root'@'localhost' identified by 'root';
#
/* добавить привелегии все */
grant all privilleges on *. * to 'noon-root'@'localhost';
#
/* удалить все права */
drop USEr 'noon-root'@'localhost';
#
//////// РАБОТА С ЮЗЕРОМ \\\\\\\\\\






/// SQL /// SQL /// SQL /// SQL /// SQL /// SQL /// SQL /// SQL /// SQL /// SQL /// SQL /// SQL /// SQL /// SQL /// SQL /// SQL 

/////////////////////////////

-- wget начинает скачивать по куказанному пути

wget -qO- https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -



sudo add-apt-repository "$(wget -qO- https://packages.microsoft.com/config/ubuntu/20.04/mssql-server-2019.list)"


sudo apt-get update
sudo apt-get install -y mssql-server

=====================
!QAZxsw2#EDCvfr4

sudo /opt/mssql/bin/mssql-conf setup

!QAZxsw2#EDCvfr4
systemctl status mssql-server --no-pager


mssql-tools-------------------------

curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
curl https://packages.microsoft.com/config/ubuntu/20.04/prod.list | sudo tee /etc/apt/sources.list.d/msprod.list


sudo apt-get update 
sudo apt-get install mssql-tools unixodbc-dev

//////////////////////////

Локальное подключение

Запустите sqlcmd с параметрами имени вашего SQL Server (-S), имени пользователя (-U) и пароля (-P). В этом руководстве вы подключаетесь локально, поэтому имя сервера — localhost. Имя пользователя — SA, а пароль тот, что вы выбрали для учетной записи SA во время установки.

sqlcmd -S localhost -U SA -P '<YourPassword>'


https://docs.microsoft.com/ru-ru/sql/linux/quickstart-install-connect-ubuntu?view=sql-server-ver15

//////////////////////////


/////////////////////////////////

sudo apt-get install gdebi -y

///////////вход/////////

$ sudo su
root@mike215misha-S400CA:/home/mike215misha# mysql -u root -p
mysql> 
CREATE database BOOK;
USE BOOK;
/* пользователь на локалхосте если надо определенный хост надо его знать */
CREATE USER 'MIKE215BOOK'@'localhost' IDINTIFIED BY 'root'; -- здесь рут можно заменить на passsword
#
/* добавить привелегии все */

GRANT ALL PRIVILEGES on BOOK.* TO 'MIKE215BOOK'@'localhost';
#


||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
||||||||||||||||||||||||||||||||| SUDO LINUX |||||||||||||||||||||||||||||||||||||||||||||||||||
||||||||||||||||||||||||||||||||| SUDO LINUX |||||||||||||||||||||||||||||||||||||||||||||||||||
||||||||||||||||||||||||||||||||| SUDO LINUX |||||||||||||||||||||||||||||||||||||||||||||||||||
||||||||||||||||||||||||||||||||| SUDO LINUX |||||||||||||||||||||||||||||||||||||||||||||||||||
||||||||||||||||||||||||||||||||| SUDO LINUX |||||||||||||||||||||||||||||||||||||||||||||||||||
||||||||||||||||||||||||||||||||| SUDO LINUX |||||||||||||||||||||||||||||||||||||||||||||||||||
||||||||||||||||||||||||||||||||| SUDO LINUX |||||||||||||||||||||||||||||||||||||||||||||||||||
||||||||||||||||||||||||||||||||| SUDO LINUX |||||||||||||||||||||||||||||||||||||||||||||||||||
||||||||||||||||||||||||||||||||| SUDO LINUX |||||||||||||||||||||||||||||||||||||||||||||||||||
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||


