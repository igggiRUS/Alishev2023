package Day07;

/**
 * **
 *  * Дворовый футбол.
 *  * Для игры в футбол во дворе требуется 6 человек (3x3). Класс Игрок (англ. Player), содержит следующие поля:
 *  * поле "выносливость" stamina, разное для каждого экземпляра.
 *  * константы "максимальная выносливость" MAX_STAMINA = 100, "минимальная выносливость" MIN_STAMINA = 0,
 *  * единые для всех экземпляров
 *  * статическое поле countPlayers, которое считает кол-во игроков на футбольном поле
 *  * (изначально их 0, выходом на поле считается создание экземпляра класса, уходом - когда игрок устал).
 *  * и следующие методы:
 *  * run() - Игрок бежит при вызове этого метода. Этот метод уменьшает выносливость на 1 при однократном вызове.
 *  * Когда выносливость достигает 0, игроку нужен отдых и он уходит с поля.
 *  * info() - выводит сообщение в зависимости от кол-ва игроков на поле, если игроков менее 6,
 *  * то выводит фразу "Команды неполные, еще есть … свободных мест", иначе "Мест в командах больше нет".
 *  * Задание: Создать класс Player по вышеописанному шаблону.
 *  * Экземпляр класса при создании должен иметь значение выносливости от 90 до 100.
 *  * Создать 6 игроков, вызвать метод info(). При попытке создать 7,8 … n игрока,
 *  * кол-во игроков на поле меняться не должно, проверить это.
 *  * Примените к игроку метод run, пока он полностью не выдохнется
 *  * (отрицательное значение выносливости не допускается). Вывести кол-во игроков на поле.
 *  */



public class Task02 {
    public static void main(String[] args) {

        // вывели игроков

        Player player1 = new Player(90);
        Player player2 = new Player(95);
        Player player3 = new Player(91);

        Player.info();

        Player player4 = new Player(93);
        Player player5 = new Player(100);
        Player player6 = new Player(98);

        Player.info();

        Player player7 = new Player(96);

        Player.info();
        // делаем так что бы игрок выдохся
        for (int i =0 ; i < 91; i++ ){
            player3.run();
        }
        Player.info();

    }
}
